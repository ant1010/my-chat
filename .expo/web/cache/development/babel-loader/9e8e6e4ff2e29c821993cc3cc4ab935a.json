{"ast":null,"code":"export var createUser = \"\\n  mutation CreateUser(\\n    $input: CreateUserInput!\\n    $condition: ModelUserConditionInput\\n  ) {\\n    createUser(input: $input, condition: $condition) {\\n      id\\n      name\\n      imageUri\\n      status\\n      contacts {\\n        items {\\n          id\\n          firstUserID\\n          secondUserID\\n          status\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      chatRoomUser {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      eventUser {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n      owner\\n    }\\n  }\\n\";\nexport var updateUser = \"\\n  mutation UpdateUser(\\n    $input: UpdateUserInput!\\n    $condition: ModelUserConditionInput\\n  ) {\\n    updateUser(input: $input, condition: $condition) {\\n      id\\n      name\\n      imageUri\\n      status\\n      contacts {\\n        items {\\n          id\\n          firstUserID\\n          secondUserID\\n          status\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      chatRoomUser {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      eventUser {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n      owner\\n    }\\n  }\\n\";\nexport var deleteUser = \"\\n  mutation DeleteUser(\\n    $input: DeleteUserInput!\\n    $condition: ModelUserConditionInput\\n  ) {\\n    deleteUser(input: $input, condition: $condition) {\\n      id\\n      name\\n      imageUri\\n      status\\n      contacts {\\n        items {\\n          id\\n          firstUserID\\n          secondUserID\\n          status\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      chatRoomUser {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      eventUser {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n      owner\\n    }\\n  }\\n\";\nexport var createFriendPair = \"\\n  mutation CreateFriendPair(\\n    $input: CreateFriendPairInput!\\n    $condition: ModelFriendPairConditionInput\\n  ) {\\n    createFriendPair(input: $input, condition: $condition) {\\n      id\\n      firstUserID\\n      secondUserID\\n      userOne {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      userTwo {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      status\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updateFriendPair = \"\\n  mutation UpdateFriendPair(\\n    $input: UpdateFriendPairInput!\\n    $condition: ModelFriendPairConditionInput\\n  ) {\\n    updateFriendPair(input: $input, condition: $condition) {\\n      id\\n      firstUserID\\n      secondUserID\\n      userOne {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      userTwo {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      status\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deleteFriendPair = \"\\n  mutation DeleteFriendPair(\\n    $input: DeleteFriendPairInput!\\n    $condition: ModelFriendPairConditionInput\\n  ) {\\n    deleteFriendPair(input: $input, condition: $condition) {\\n      id\\n      firstUserID\\n      secondUserID\\n      userOne {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      userTwo {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      status\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var createChatRoomUser = \"\\n  mutation CreateChatRoomUser(\\n    $input: CreateChatRoomUserInput!\\n    $condition: ModelChatRoomUserConditionInput\\n  ) {\\n    createChatRoomUser(input: $input, condition: $condition) {\\n      id\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updateChatRoomUser = \"\\n  mutation UpdateChatRoomUser(\\n    $input: UpdateChatRoomUserInput!\\n    $condition: ModelChatRoomUserConditionInput\\n  ) {\\n    updateChatRoomUser(input: $input, condition: $condition) {\\n      id\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deleteChatRoomUser = \"\\n  mutation DeleteChatRoomUser(\\n    $input: DeleteChatRoomUserInput!\\n    $condition: ModelChatRoomUserConditionInput\\n  ) {\\n    deleteChatRoomUser(input: $input, condition: $condition) {\\n      id\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var createChatRoom = \"\\n  mutation CreateChatRoom(\\n    $input: CreateChatRoomInput!\\n    $condition: ModelChatRoomConditionInput\\n  ) {\\n    createChatRoom(input: $input, condition: $condition) {\\n      id\\n      chatRoomUsers {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      messages {\\n        items {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastMessageID\\n      lastMessage {\\n        id\\n        createdAt\\n        content\\n        userID\\n        chatRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        chatRoom {\\n          id\\n          lastMessageID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updateChatRoom = \"\\n  mutation UpdateChatRoom(\\n    $input: UpdateChatRoomInput!\\n    $condition: ModelChatRoomConditionInput\\n  ) {\\n    updateChatRoom(input: $input, condition: $condition) {\\n      id\\n      chatRoomUsers {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      messages {\\n        items {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastMessageID\\n      lastMessage {\\n        id\\n        createdAt\\n        content\\n        userID\\n        chatRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        chatRoom {\\n          id\\n          lastMessageID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deleteChatRoom = \"\\n  mutation DeleteChatRoom(\\n    $input: DeleteChatRoomInput!\\n    $condition: ModelChatRoomConditionInput\\n  ) {\\n    deleteChatRoom(input: $input, condition: $condition) {\\n      id\\n      chatRoomUsers {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      messages {\\n        items {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastMessageID\\n      lastMessage {\\n        id\\n        createdAt\\n        content\\n        userID\\n        chatRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        chatRoom {\\n          id\\n          lastMessageID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var createMessage = \"\\n  mutation CreateMessage(\\n    $input: CreateMessageInput!\\n    $condition: ModelMessageConditionInput\\n  ) {\\n    createMessage(input: $input, condition: $condition) {\\n      id\\n      createdAt\\n      content\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updateMessage = \"\\n  mutation UpdateMessage(\\n    $input: UpdateMessageInput!\\n    $condition: ModelMessageConditionInput\\n  ) {\\n    updateMessage(input: $input, condition: $condition) {\\n      id\\n      createdAt\\n      content\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deleteMessage = \"\\n  mutation DeleteMessage(\\n    $input: DeleteMessageInput!\\n    $condition: ModelMessageConditionInput\\n  ) {\\n    deleteMessage(input: $input, condition: $condition) {\\n      id\\n      createdAt\\n      content\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";\nexport var createEventUser = \"\\n  mutation CreateEventUser(\\n    $input: CreateEventUserInput!\\n    $condition: ModelEventUserConditionInput\\n  ) {\\n    createEventUser(input: $input, condition: $condition) {\\n      id\\n      userID\\n      eventRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updateEventUser = \"\\n  mutation UpdateEventUser(\\n    $input: UpdateEventUserInput!\\n    $condition: ModelEventUserConditionInput\\n  ) {\\n    updateEventUser(input: $input, condition: $condition) {\\n      id\\n      userID\\n      eventRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deleteEventUser = \"\\n  mutation DeleteEventUser(\\n    $input: DeleteEventUserInput!\\n    $condition: ModelEventUserConditionInput\\n  ) {\\n    deleteEventUser(input: $input, condition: $condition) {\\n      id\\n      userID\\n      eventRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var createEventRoom = \"\\n  mutation CreateEventRoom(\\n    $input: CreateEventRoomInput!\\n    $condition: ModelEventRoomConditionInput\\n  ) {\\n    createEventRoom(input: $input, condition: $condition) {\\n      id\\n      eventUsers {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      events {\\n        items {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastEventID\\n      lastEvent {\\n        id\\n        userID\\n        title\\n        createdAt\\n        content\\n        eventTime\\n        eventLocation\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        eventRoomID\\n        eventRoom {\\n          id\\n          lastEventID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updateEventRoom = \"\\n  mutation UpdateEventRoom(\\n    $input: UpdateEventRoomInput!\\n    $condition: ModelEventRoomConditionInput\\n  ) {\\n    updateEventRoom(input: $input, condition: $condition) {\\n      id\\n      eventUsers {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      events {\\n        items {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastEventID\\n      lastEvent {\\n        id\\n        userID\\n        title\\n        createdAt\\n        content\\n        eventTime\\n        eventLocation\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        eventRoomID\\n        eventRoom {\\n          id\\n          lastEventID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deleteEventRoom = \"\\n  mutation DeleteEventRoom(\\n    $input: DeleteEventRoomInput!\\n    $condition: ModelEventRoomConditionInput\\n  ) {\\n    deleteEventRoom(input: $input, condition: $condition) {\\n      id\\n      eventUsers {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      events {\\n        items {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastEventID\\n      lastEvent {\\n        id\\n        userID\\n        title\\n        createdAt\\n        content\\n        eventTime\\n        eventLocation\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        eventRoomID\\n        eventRoom {\\n          id\\n          lastEventID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var createEvent = \"\\n  mutation CreateEvent(\\n    $input: CreateEventInput!\\n    $condition: ModelEventConditionInput\\n  ) {\\n    createEvent(input: $input, condition: $condition) {\\n      id\\n      userID\\n      title\\n      createdAt\\n      content\\n      eventTime\\n      eventLocation\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoomID\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";\nexport var updateEvent = \"\\n  mutation UpdateEvent(\\n    $input: UpdateEventInput!\\n    $condition: ModelEventConditionInput\\n  ) {\\n    updateEvent(input: $input, condition: $condition) {\\n      id\\n      userID\\n      title\\n      createdAt\\n      content\\n      eventTime\\n      eventLocation\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoomID\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";\nexport var deleteEvent = \"\\n  mutation DeleteEvent(\\n    $input: DeleteEventInput!\\n    $condition: ModelEventConditionInput\\n  ) {\\n    deleteEvent(input: $input, condition: $condition) {\\n      id\\n      userID\\n      title\\n      createdAt\\n      content\\n      eventTime\\n      eventLocation\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoomID\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/src/graphql/mutations.ts"],"names":["createUser","updateUser","deleteUser","createFriendPair","updateFriendPair","deleteFriendPair","createChatRoomUser","updateChatRoomUser","deleteChatRoomUser","createChatRoom","updateChatRoom","deleteChatRoom","createMessage","updateMessage","deleteMessage","createEventUser","updateEventUser","deleteEventUser","createEventRoom","updateEventRoom","deleteEventRoom","createEvent","updateEvent","deleteEvent"],"mappings":"AAIA,OAAO,IAAMA,UAAU,izBAAhB;AA+CP,OAAO,IAAMC,UAAU,izBAAhB;AA+CP,OAAO,IAAMC,UAAU,izBAAhB;AA+CP,OAAO,IAAMC,gBAAgB,k4BAAtB;AAmDP,OAAO,IAAMC,gBAAgB,k4BAAtB;AAmDP,OAAO,IAAMC,gBAAgB,k4BAAtB;AAmDP,OAAO,IAAMC,kBAAkB,46BAAxB;AAoDP,OAAO,IAAMC,kBAAkB,46BAAxB;AAoDP,OAAO,IAAMC,kBAAkB,46BAAxB;AAoDP,OAAO,IAAMC,cAAc,6/BAApB;AAyDP,OAAO,IAAMC,cAAc,6/BAApB;AAyDP,OAAO,IAAMC,cAAc,6/BAApB;AAyDP,OAAO,IAAMC,aAAa,u6BAAnB;AAqDP,OAAO,IAAMC,aAAa,u6BAAnB;AAqDP,OAAO,IAAMC,aAAa,u6BAAnB;AAqDP,OAAO,IAAMC,eAAe,y9BAArB;AAuDP,OAAO,IAAMC,eAAe,y9BAArB;AAuDP,OAAO,IAAMC,eAAe,y9BAArB;AAuDP,OAAO,IAAMC,eAAe,knCAArB;AA+DP,OAAO,IAAMC,eAAe,knCAArB;AA+DP,OAAO,IAAMC,eAAe,knCAArB;AA+DP,OAAO,IAAMC,WAAW,2gCAAjB;AA2DP,OAAO,IAAMC,WAAW,2gCAAjB;AA2DP,OAAO,IAAMC,WAAW,2gCAAjB","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createUser = /* GraphQL */ `\n  mutation CreateUser(\n    $input: CreateUserInput!\n    $condition: ModelUserConditionInput\n  ) {\n    createUser(input: $input, condition: $condition) {\n      id\n      name\n      imageUri\n      status\n      contacts {\n        items {\n          id\n          firstUserID\n          secondUserID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      chatRoomUser {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      eventUser {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const updateUser = /* GraphQL */ `\n  mutation UpdateUser(\n    $input: UpdateUserInput!\n    $condition: ModelUserConditionInput\n  ) {\n    updateUser(input: $input, condition: $condition) {\n      id\n      name\n      imageUri\n      status\n      contacts {\n        items {\n          id\n          firstUserID\n          secondUserID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      chatRoomUser {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      eventUser {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const deleteUser = /* GraphQL */ `\n  mutation DeleteUser(\n    $input: DeleteUserInput!\n    $condition: ModelUserConditionInput\n  ) {\n    deleteUser(input: $input, condition: $condition) {\n      id\n      name\n      imageUri\n      status\n      contacts {\n        items {\n          id\n          firstUserID\n          secondUserID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      chatRoomUser {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      eventUser {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const createFriendPair = /* GraphQL */ `\n  mutation CreateFriendPair(\n    $input: CreateFriendPairInput!\n    $condition: ModelFriendPairConditionInput\n  ) {\n    createFriendPair(input: $input, condition: $condition) {\n      id\n      firstUserID\n      secondUserID\n      userOne {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      userTwo {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      status\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateFriendPair = /* GraphQL */ `\n  mutation UpdateFriendPair(\n    $input: UpdateFriendPairInput!\n    $condition: ModelFriendPairConditionInput\n  ) {\n    updateFriendPair(input: $input, condition: $condition) {\n      id\n      firstUserID\n      secondUserID\n      userOne {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      userTwo {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      status\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteFriendPair = /* GraphQL */ `\n  mutation DeleteFriendPair(\n    $input: DeleteFriendPairInput!\n    $condition: ModelFriendPairConditionInput\n  ) {\n    deleteFriendPair(input: $input, condition: $condition) {\n      id\n      firstUserID\n      secondUserID\n      userOne {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      userTwo {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      status\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createChatRoomUser = /* GraphQL */ `\n  mutation CreateChatRoomUser(\n    $input: CreateChatRoomUserInput!\n    $condition: ModelChatRoomUserConditionInput\n  ) {\n    createChatRoomUser(input: $input, condition: $condition) {\n      id\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateChatRoomUser = /* GraphQL */ `\n  mutation UpdateChatRoomUser(\n    $input: UpdateChatRoomUserInput!\n    $condition: ModelChatRoomUserConditionInput\n  ) {\n    updateChatRoomUser(input: $input, condition: $condition) {\n      id\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteChatRoomUser = /* GraphQL */ `\n  mutation DeleteChatRoomUser(\n    $input: DeleteChatRoomUserInput!\n    $condition: ModelChatRoomUserConditionInput\n  ) {\n    deleteChatRoomUser(input: $input, condition: $condition) {\n      id\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createChatRoom = /* GraphQL */ `\n  mutation CreateChatRoom(\n    $input: CreateChatRoomInput!\n    $condition: ModelChatRoomConditionInput\n  ) {\n    createChatRoom(input: $input, condition: $condition) {\n      id\n      chatRoomUsers {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastMessageID\n      lastMessage {\n        id\n        createdAt\n        content\n        userID\n        chatRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        chatRoom {\n          id\n          lastMessageID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateChatRoom = /* GraphQL */ `\n  mutation UpdateChatRoom(\n    $input: UpdateChatRoomInput!\n    $condition: ModelChatRoomConditionInput\n  ) {\n    updateChatRoom(input: $input, condition: $condition) {\n      id\n      chatRoomUsers {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastMessageID\n      lastMessage {\n        id\n        createdAt\n        content\n        userID\n        chatRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        chatRoom {\n          id\n          lastMessageID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteChatRoom = /* GraphQL */ `\n  mutation DeleteChatRoom(\n    $input: DeleteChatRoomInput!\n    $condition: ModelChatRoomConditionInput\n  ) {\n    deleteChatRoom(input: $input, condition: $condition) {\n      id\n      chatRoomUsers {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastMessageID\n      lastMessage {\n        id\n        createdAt\n        content\n        userID\n        chatRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        chatRoom {\n          id\n          lastMessageID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createMessage = /* GraphQL */ `\n  mutation CreateMessage(\n    $input: CreateMessageInput!\n    $condition: ModelMessageConditionInput\n  ) {\n    createMessage(input: $input, condition: $condition) {\n      id\n      createdAt\n      content\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\nexport const updateMessage = /* GraphQL */ `\n  mutation UpdateMessage(\n    $input: UpdateMessageInput!\n    $condition: ModelMessageConditionInput\n  ) {\n    updateMessage(input: $input, condition: $condition) {\n      id\n      createdAt\n      content\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\nexport const deleteMessage = /* GraphQL */ `\n  mutation DeleteMessage(\n    $input: DeleteMessageInput!\n    $condition: ModelMessageConditionInput\n  ) {\n    deleteMessage(input: $input, condition: $condition) {\n      id\n      createdAt\n      content\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\nexport const createEventUser = /* GraphQL */ `\n  mutation CreateEventUser(\n    $input: CreateEventUserInput!\n    $condition: ModelEventUserConditionInput\n  ) {\n    createEventUser(input: $input, condition: $condition) {\n      id\n      userID\n      eventRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateEventUser = /* GraphQL */ `\n  mutation UpdateEventUser(\n    $input: UpdateEventUserInput!\n    $condition: ModelEventUserConditionInput\n  ) {\n    updateEventUser(input: $input, condition: $condition) {\n      id\n      userID\n      eventRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteEventUser = /* GraphQL */ `\n  mutation DeleteEventUser(\n    $input: DeleteEventUserInput!\n    $condition: ModelEventUserConditionInput\n  ) {\n    deleteEventUser(input: $input, condition: $condition) {\n      id\n      userID\n      eventRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createEventRoom = /* GraphQL */ `\n  mutation CreateEventRoom(\n    $input: CreateEventRoomInput!\n    $condition: ModelEventRoomConditionInput\n  ) {\n    createEventRoom(input: $input, condition: $condition) {\n      id\n      eventUsers {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      events {\n        items {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastEventID\n      lastEvent {\n        id\n        userID\n        title\n        createdAt\n        content\n        eventTime\n        eventLocation\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        eventRoomID\n        eventRoom {\n          id\n          lastEventID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateEventRoom = /* GraphQL */ `\n  mutation UpdateEventRoom(\n    $input: UpdateEventRoomInput!\n    $condition: ModelEventRoomConditionInput\n  ) {\n    updateEventRoom(input: $input, condition: $condition) {\n      id\n      eventUsers {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      events {\n        items {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastEventID\n      lastEvent {\n        id\n        userID\n        title\n        createdAt\n        content\n        eventTime\n        eventLocation\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        eventRoomID\n        eventRoom {\n          id\n          lastEventID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteEventRoom = /* GraphQL */ `\n  mutation DeleteEventRoom(\n    $input: DeleteEventRoomInput!\n    $condition: ModelEventRoomConditionInput\n  ) {\n    deleteEventRoom(input: $input, condition: $condition) {\n      id\n      eventUsers {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      events {\n        items {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastEventID\n      lastEvent {\n        id\n        userID\n        title\n        createdAt\n        content\n        eventTime\n        eventLocation\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        eventRoomID\n        eventRoom {\n          id\n          lastEventID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createEvent = /* GraphQL */ `\n  mutation CreateEvent(\n    $input: CreateEventInput!\n    $condition: ModelEventConditionInput\n  ) {\n    createEvent(input: $input, condition: $condition) {\n      id\n      userID\n      title\n      createdAt\n      content\n      eventTime\n      eventLocation\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoomID\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\nexport const updateEvent = /* GraphQL */ `\n  mutation UpdateEvent(\n    $input: UpdateEventInput!\n    $condition: ModelEventConditionInput\n  ) {\n    updateEvent(input: $input, condition: $condition) {\n      id\n      userID\n      title\n      createdAt\n      content\n      eventTime\n      eventLocation\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoomID\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\nexport const deleteEvent = /* GraphQL */ `\n  mutation DeleteEvent(\n    $input: DeleteEventInput!\n    $condition: ModelEventConditionInput\n  ) {\n    deleteEvent(input: $input, condition: $condition) {\n      id\n      userID\n      title\n      createdAt\n      content\n      eventTime\n      eventLocation\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoomID\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}