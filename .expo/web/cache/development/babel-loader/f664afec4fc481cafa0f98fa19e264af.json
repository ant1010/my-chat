{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styles from \"./styles\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { listUsers } from \"../../src/graphql/queries\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { FontAwesome, EvilIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EventInput = function EventInput() {\n  var _useState = useState({\n    title: '',\n    content: '',\n    location: '',\n    invites: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextSelectedInvite = _useState4[0],\n      setNextSelectedInvite = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inviteList = _useState6[0],\n      setInviteList = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filterFriendList = _useState8[0],\n      setFilterFriendList = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      users = _useState10[0],\n      setUsers = _useState10[1];\n\n  var _useState11 = useState(new Date(Date.now())),\n      _useState12 = _slicedToArray(_useState11, 2),\n      date = _useState12[0],\n      setDate = _useState12[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setShow(false);\n    setDate(currentDate);\n  };\n\n  useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      var userData;\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listUsers)));\n\n            case 3:\n              userData = _context.sent;\n              console.log(userData);\n              setUsers(userData.data.listUsers.items);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    fetchUsers();\n  }, []);\n  useEffect(function () {\n    setFilterFriendList([]);\n\n    if (nextSelectedInvite == \"\") {\n      return;\n    }\n\n    var list = [];\n    users.forEach(function (element) {\n      if (element.name.toLowerCase().includes(nextSelectedInvite.toLowerCase())) list.push(element);\n    });\n    setFilterFriendList(list);\n    console.log(filterFriendList);\n  }, [nextSelectedInvite]);\n\n  var updateFormValue = function updateFormValue(event, name) {\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, _defineProperty({}, name, event)));\n  };\n\n  var onClick = function onClick(name) {\n    return function () {\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        invites: [].concat(_toConsumableArray(formValues.invites), [name])\n      }));\n      setUsers(users.filter(function (item) {\n        return item !== name;\n      }));\n      setNextSelectedInvite(\"\");\n    };\n  };\n\n  var removeName = function removeName(name) {\n    return function () {\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        invites: formValues.invites.filter(function (item) {\n          return item !== name;\n        })\n      }));\n      setUsers(function (users) {\n        return [].concat(_toConsumableArray(users), [name]);\n      });\n    };\n  };\n\n  var SearchListNameCard = function SearchListNameCard(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableWithoutFeedback, {\n      children: _jsxs(View, {\n        style: styles.nameCardContainer,\n        children: [_jsx(EvilIcons, {\n          name: \"search\",\n          size: 24,\n          color: \"black\"\n        }), _jsx(Image, {\n          source: {\n            uri: item.imageUri\n          },\n          style: styles.avatar\n        }), _jsx(Text, {\n          onPress: onClick(item),\n          style: styles.nameCardText,\n          children: item.name\n        })]\n      })\n    });\n  };\n\n  var SelectedNameCard = function SelectedNameCard(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableWithoutFeedback, {\n      children: _jsx(View, {\n        style: styles.selectedUsers,\n        children: _jsxs(View, {\n          style: styles.lefContainer,\n          children: [_jsx(Image, {\n            source: {\n              uri: item.imageUri\n            },\n            style: styles.avatar\n          }), _jsx(View, {\n            style: styles.midContainer,\n            children: _jsx(Text, {\n              style: styles.username,\n              children: item.name\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              flex: 1\n            },\n            onPress: removeName(item),\n            children: _jsx(FontAwesome, {\n              name: \"remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: 100,\n    style: {\n      width: '100%'\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          \"data-name\": \"title\",\n          placeholder: \"Title\",\n          style: styles.textInput,\n          value: formValues.title,\n          onChangeText: function onChangeText(e) {\n            return updateFormValue(e, 'title');\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.textLabel,\n        children: \"When?\"\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(DateTimePicker, {\n          testID: \"dateTimePicker\",\n          value: date,\n          mode: 'datetime',\n          is24Hour: true,\n          onChange: onChange\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          \"data-name\": \"location\",\n          placeholder: \"Where?\",\n          style: styles.textInput,\n          value: formValues.location,\n          onChangeText: function onChangeText(e) {\n            return updateFormValue(e, 'location');\n          }\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          \"data-name\": \"content\",\n          placeholder: \"What?\",\n          style: styles.textInput,\n          multiline: true,\n          value: formValues.content,\n          onChangeText: function onChangeText(e) {\n            return updateFormValue(e, 'content');\n          }\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"Who?\",\n          style: styles.textInput,\n          multiline: true,\n          value: nextSelectedInvite,\n          onChangeText: setNextSelectedInvite\n        })\n      }), _jsx(View, {\n        style: styles.searchContainer,\n        children: _jsx(FlatList, {\n          data: filterFriendList,\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsx(SearchListNameCard, {\n              item: item\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.textLabel,\n        children: \"Invites:\"\n      }), _jsx(FlatList, {\n        data: formValues.invites,\n        style: {\n          width: '100%'\n        },\n        renderItem: function renderItem(_ref4) {\n          var item = _ref4.item;\n          return _jsx(SelectedNameCard, {\n            item: item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        numColumns: 2\n      })]\n    })\n  });\n};\n\nexport default EventInput;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/EventInput/index.tsx"],"names":["React","useState","useEffect","styles","API","graphqlOperation","listUsers","DateTimePicker","FontAwesome","EvilIcons","EventInput","title","content","location","invites","formValues","setFormValues","nextSelectedInvite","setNextSelectedInvite","inviteList","setInviteList","filterFriendList","setFilterFriendList","users","setUsers","Date","now","date","setDate","onChange","event","selectedDate","currentDate","setShow","fetchUsers","graphql","userData","console","log","data","items","list","forEach","element","name","toLowerCase","includes","push","updateFormValue","onClick","filter","item","removeName","SearchListNameCard","nameCardContainer","uri","imageUri","avatar","nameCardText","SelectedNameCard","selectedUsers","lefContainer","midContainer","username","flex","Platform","OS","width","container","mainContainer","textInput","e","textLabel","searchContainer","id"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,Fragment} from 'react';\n// @ts-ignore\nimport {View,FlatList,Image, Text, TextInput, TouchableWithoutFeedback,TouchableOpacity,KeyboardAvoidingView,Platform,StyleSheet,Button} from \"react-native\";\nimport styles from './styles';\nimport{API,Auth,graphqlOperation,} from \"aws-amplify\";\nimport {createEvents,updateChatRoom} from \"../../src/graphql/mutations\";\nimport {listUsers} from '../../src/graphql/queries';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport {\n  MaterialCommunityIcons,\n  MaterialIcons,\n  FontAwesome,\n  Entypo,\n  Fontisto,\n  EvilIcons ,\n} from '@expo/vector-icons';\n\nconst EventInput = () => {\n\n  //const {chatRoomID} = props;\n  const [formValues, setFormValues] = useState({\n    title: '',\n    content: '',\n    location: '',\n    invites:[]\n  })\n  const [nextSelectedInvite,setNextSelectedInvite] = useState('');\n  const [inviteList,setInviteList] = useState([]);\n  const [filterFriendList, setFilterFriendList] = useState([]);\n  const [users,setUsers] = useState([]);\n  const [date, setDate] = useState(new Date(Date.now()));\n  \n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate;\n    setShow(false);\n    setDate(currentDate);\n  };\n  \n  useEffect(() => {\n      const fetchUsers = async () => {\n          try{\n              const userData = await API.graphql(graphqlOperation(listUsers));\n              console.log(userData);\n              setUsers(userData.data.listUsers.items);\n          }catch(e){\n              console.log(e);\n          }\n      }\n     fetchUsers();\n  }, [])\n  useEffect(() =>{\n    setFilterFriendList([]);\n    if(nextSelectedInvite == \"\"){ return;}\n       \n        let list = [];\n        users.forEach((element) => {\n            if(element.name.toLowerCase().includes(nextSelectedInvite.toLowerCase()))\n               list.push(element);\n          });\n       setFilterFriendList(list);\n       \n       console.log(filterFriendList)\n    \n  },[nextSelectedInvite])\n\n\n  const updateFormValue = (event,name) =>{\n    //const {name} =event.target.dataset;\n    setFormValues({...formValues,[name]:event});\n    \n  }\n\n  //adds user to invite list\n  const onClick = (name) =>() =>{\n   \n    setFormValues({...formValues, invites: [...formValues.invites,name]})\n    setUsers(users.filter(item => item !== name) )\n    setNextSelectedInvite(\"\");\n  }\n \n const removeName = (name) => () =>{\n   \n    setFormValues({...formValues, invites: formValues.invites.filter(item => item !== name)})\n    setUsers(users => [...users,name])\n }\n  const SearchListNameCard = ({ item }) => (\n    <TouchableWithoutFeedback >\n    <View  style={styles.nameCardContainer}>\n      <EvilIcons name=\"search\" size={24} color=\"black\" />\n      <Image source={{ uri: item.imageUri }} style={styles.avatar}/>\n      <Text onPress={onClick(item)} style={styles.nameCardText} >{item.name}</Text>\n    </View>\n    </TouchableWithoutFeedback>\n  );\n  const SelectedNameCard = ({ item }) => (\n    <TouchableWithoutFeedback >\n      <View style={styles.selectedUsers}>\n        <View style={styles.lefContainer}>\n          <Image source={{ uri: item.imageUri }} style={styles.avatar}/>\n          <View style={styles.midContainer}>\n            <Text style={styles.username}>{item.name}</Text>\n          </View>\n          <TouchableOpacity  style={{flex:1}} onPress ={removeName(item)}>\n          <FontAwesome name=\"remove\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n        \n      </View>\n      \n     \n    </TouchableWithoutFeedback>\n  );\n    return (\n        <KeyboardAvoidingView behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n            keyboardVerticalOffset={100} style={{ width: '100%' }}>\n            <View style={styles.container}>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        data-name='title'\n                        placeholder={\"Title\"}\n                        style={styles.textInput}\n                        value={formValues.title}\n                        onChangeText={e => updateFormValue(e,'title')}\n                    />\n                   \n                </View>\n                  <Text style={styles.textLabel}>When?</Text>\n                <View style={styles.mainContainer}>\n                        {/* <Text>selected: {date.toLocaleString()}</Text> */}\n                       \n                            <DateTimePicker\n                                testID=\"dateTimePicker\"\n                                value={date}\n                                mode={'datetime'}\n                                is24Hour={true}\n                                onChange={onChange}\n                    />\n                </View>\n\n                <View style={styles.mainContainer}>\n                    <TextInput\n                        data-name = 'location'\n                        placeholder={\"Where?\"}\n                        style={styles.textInput}\n                        value={formValues.location}\n                        onChangeText={e => updateFormValue(e,'location')}\n                    />\n\n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        data-name = 'content'\n                        placeholder={\"What?\"}\n                        style={styles.textInput}\n                        multiline\n                        value={formValues.content}\n                        onChangeText={e =>updateFormValue(e,'content')}\n                    />\n\n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        placeholder={\"Who?\"}\n                        style={styles.textInput}\n                        multiline\n                        value={nextSelectedInvite}\n                        onChangeText={setNextSelectedInvite}\n                    />\n\n                </View>\n\n                <View style={styles.searchContainer}>\n\n                    <FlatList\n                        data={filterFriendList}\n                        renderItem={({ item }) => <SearchListNameCard item={item} ></SearchListNameCard>}\n                        keyExtractor={item => item.id}\n                    />\n                </View>\n              \n                <Text style={styles.textLabel}>Invites:</Text>\n\n                <FlatList\n                    data={formValues.invites}\n                    style={{ width: '100%' }}\n                    renderItem={({ item }) => <SelectedNameCard item={item} ></SelectedNameCard>}\n                    keyExtractor={item => item.id}\n                    numColumns={2}\n                />\n\n            </View>\n\n\n\n\n\n\n\n\n\n        </KeyboardAvoidingView>\n    )\n\n}\n\nexport default EventInput;"]},"metadata":{},"sourceType":"module"}