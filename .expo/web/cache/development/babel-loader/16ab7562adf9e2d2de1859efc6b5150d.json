{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport * as React from 'react';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainTab = createMaterialTopTabNavigator();\nexport default function MainTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(MainTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(MainTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: function options(_ref) {\n        var navigation = _ref.navigation;\n        return {\n          title: 'Tab One',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref3) {\n                var pressed = _ref3.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: 'Tab Two',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/navigation/MainTabNavigator.tsx"],"names":["FontAwesome","createMaterialTopTabNavigator","React","Colors","useColorScheme","TabOneScreen","TabTwoScreen","MainTab","MainTabNavigator","colorScheme","tabBarActiveTintColor","tint","navigation","title","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":";;;;;;AACA,SAASA,WAAT,QAA4B,oBAA5B;;AAGA,SAASC,6BAAT,QAA8C,qCAA9C;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAIA,OAAOC,MAAP;AACA,OAAOC,cAAP;AAGA,OAAOC,YAAP;AACA,OAAOC,YAAP;;;AAEA,IAAMC,OAAO,GAAGN,6BAA6B,EAA7C;AAEA,eAAe,SAASO,gBAAT,GAA4B;AACzC,MAAMC,WAAW,GAAGL,cAAc,EAAlC;AAEA,SACE,MAAC,OAAD,CAAS,SAAT;AACE,IAAA,gBAAgB,EAAC,QADnB;AAEE,IAAA,aAAa,EAAE;AACbM,MAAAA,qBAAqB,EAAEP,MAAM,CAACM,WAAD,CAAN,CAAoBE;AAD9B,KAFjB;AAAA,eAKE,KAAC,OAAD,CAAS,MAAT;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEN,YAFb;AAGE,MAAA,OAAO,EAAE;AAAA,YAAGO,UAAH,QAAGA,UAAH;AAAA,eAAmD;AAC1DC,UAAAA,KAAK,EAAE,SADmD;AAE1DC,UAAAA,UAAU,EAAE;AAAA,gBAAGC,KAAH,SAAGA,KAAH;AAAA,mBAAe,KAAC,UAAD;AAAY,cAAA,IAAI,EAAC,MAAjB;AAAwB,cAAA,KAAK,EAAEA;AAA/B,cAAf;AAAA,WAF8C;AAG1DC,UAAAA,WAAW,EAAE;AAAA,mBACX,KAAC,SAAD;AACE,cAAA,OAAO,EAAE;AAAA,uBAAMJ,UAAU,CAACK,QAAX,CAAoB,OAApB,CAAN;AAAA,eADX;AAEE,cAAA,KAAK,EAAE;AAAA,oBAAGC,OAAH,SAAGA,OAAH;AAAA,uBAAkB;AACvBC,kBAAAA,OAAO,EAAED,OAAO,GAAG,GAAH,GAAS;AADF,iBAAlB;AAAA,eAFT;AAAA,wBAKE,KAAC,WAAD;AACE,gBAAA,IAAI,EAAC,aADP;AAEE,gBAAA,IAAI,EAAE,EAFR;AAGE,gBAAA,KAAK,EAAEf,MAAM,CAACM,WAAD,CAAN,CAAoBW,IAH7B;AAIE,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,WAAW,EAAE;AAAf;AAJT;AALF,cADW;AAAA;AAH6C,SAAnD;AAAA;AAHX,MALF,EA2BE,KAAC,OAAD,CAAS,MAAT;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEf,YAFb;AAGE,MAAA,OAAO,EAAE;AACPO,QAAAA,KAAK,EAAE,SADA;AAEPC,QAAAA,UAAU,EAAE;AAAA,cAAGC,KAAH,SAAGA,KAAH;AAAA,iBAAe,KAAC,UAAD;AAAY,YAAA,IAAI,EAAC,MAAjB;AAAwB,YAAA,KAAK,EAAEA;AAA/B,YAAf;AAAA;AAFL;AAHX,MA3BF;AAAA,IADF;AAsCD;;AAKD,SAASO,UAAT,CAAoBC,KAApB,EAGG;AACD,SAAO,KAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,CAAC;AAAjB;AAA9B,KAAwDD,KAAxD,EAAP;AAED","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { ColorSchemeName, Pressable,View } from 'react-native';\n\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { Fontisto } from \"@expo/vector-icons\";\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ChatsScreen from '../screens/ChatsScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\n\nconst MainTab = createMaterialTopTabNavigator<MainTabParamList>();\n\nexport default function MainTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <MainTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <MainTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Tab One',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <MainTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Tab Two',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </MainTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n    \n}"]},"metadata":{},"sourceType":"module"}