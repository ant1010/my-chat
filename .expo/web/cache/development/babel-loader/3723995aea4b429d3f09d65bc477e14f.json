{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\nimport { FontAwesome5, Entypo, MaterialIcons, Fontisto } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InputBox = function InputBox() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var onMicrophonePress = function onMicrophonePress() {};\n\n  var onSendPress = function onSendPress() {\n    console.warn(\"Sending:{essage}\");\n    setMessage('');\n  };\n\n  var onPress = function onPress() {\n    if (!message) {\n      onMicrophonePress();\n    } else {\n      onSendPress();\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.mainContainer,\n      children: [_jsx(FontAwesome5, {\n        name: \"laugh-beam\",\n        size: 24,\n        color: \"grey\"\n      }), _jsx(TextInput, {\n        placeholder: \"Type a message\",\n        style: styles.textInput,\n        multiline: true,\n        value: message,\n        onChangeText: setMessage\n      }), _jsx(Entypo, {\n        name: \"attachment\",\n        size: 24,\n        color: \"grey\",\n        style: styles.icon\n      }), _jsx(Fontisto, {\n        name: \"camera\",\n        size: 24,\n        color: \"grey\",\n        style: styles.icon\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: onPress,\n      children: _jsx(View, {\n        style: styles.buttonContainer,\n        children: !message ? _jsx(MaterialIcons, {\n          name: \"mic\",\n          size: 24,\n          color: \"white\"\n        }) : _jsx(MaterialIcons, {\n          name: \"send\",\n          size: 28,\n          color: \"white\"\n        })\n      })\n    })]\n  });\n};\n\nexport default InputBox;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/inputBox/index.tsx"],"names":["React","useState","styles","FontAwesome5","Entypo","MaterialIcons","Fontisto","InputBox","message","setMessage","onMicrophonePress","onSendPress","console","warn","onPress","container","mainContainer","textInput","icon","buttonContainer"],"mappings":";AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAEA,OAAOC,MAAP;AACA,SAASC,YAAT,EAAsBC,MAAtB,EAA6BC,aAA7B,EAA2CC,QAA3C,QAA2D,oBAA3D;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAClB,kBAA6BN,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAeC,UAAf;;AACA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM,CAE/B,CAFD;;AAGA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7BC,IAAAA,OAAO,CAACC,IAAR;AACMJ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACF,GAHD;;AAIA,MAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAG,CAACN,OAAJ,EAAY;AACRE,MAAAA,iBAAiB;AACpB,KAFD,MAEK;AACDC,MAAAA,WAAW;AACd;AACJ,GAND;;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACa,SAApB;AAAA,eACA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACc,aAApB;AAAA,iBACA,KAAC,YAAD;AAAc,QAAA,IAAI,EAAG,YAArB;AAAkC,QAAA,IAAI,EAAE,EAAxC;AAA4C,QAAA,KAAK,EAAC;AAAlD,QADA,EAGA,KAAC,SAAD;AAAW,QAAA,WAAW,EAAI,gBAA1B;AAA2C,QAAA,KAAK,EAAId,MAAM,CAACe,SAA3D;AAAqE,QAAA,SAAS,MAA9E;AAA+E,QAAA,KAAK,EAAIT,OAAxF;AAAiG,QAAA,YAAY,EAAGC;AAAhH,QAHA,EAKA,KAAC,MAAD;AAAQ,QAAA,IAAI,EAAG,YAAf;AAA4B,QAAA,IAAI,EAAE,EAAlC;AAAsC,QAAA,KAAK,EAAC,MAA5C;AAAmD,QAAA,KAAK,EAAIP,MAAM,CAACgB;AAAnE,QALA,EAMA,KAAC,QAAD;AAAU,QAAA,IAAI,EAAG,QAAjB;AAA0B,QAAA,IAAI,EAAE,EAAhC;AAAoC,QAAA,KAAK,EAAG,MAA5C;AAAmD,QAAA,KAAK,EAAIhB,MAAM,CAACgB;AAAnE,QANA;AAAA,MADA,EAUA,KAAC,gBAAD;AAAkB,MAAA,OAAO,EAAIJ,OAA7B;AAAA,gBACA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAIZ,MAAM,CAACiB,eAAtB;AAAA,kBACC,CAACX,OAAD,GACE,KAAC,aAAD;AAAe,UAAA,IAAI,EAAC,KAApB;AAA0B,UAAA,IAAI,EAAE,EAAhC;AAAoC,UAAA,KAAK,EAAC;AAA1C,UADF,GAEE,KAAC,aAAD;AAAe,UAAA,IAAI,EAAC,MAApB;AAA2B,UAAA,IAAI,EAAE,EAAjC;AAAqC,UAAA,KAAK,EAAC;AAA3C;AAHH;AADA,MAVA;AAAA,IADJ;AAsBH,CAtCD;;AAuCA,eAAeD,QAAf","sourcesContent":["import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport React,{useState} from 'react';\nimport {View, TextInput,TouchableOpacity} from 'react-native';\nimport styles from './styles';\nimport { FontAwesome5,Entypo,MaterialIcons,Fontisto } from '@expo/vector-icons';\n\nconst InputBox = () =>{\n    const [message,setMessage] = useState('');\n    const onMicrophonePress = () => {\n      \n    }\n    const onSendPress = () => {\n console.warn(`Sending:{essage}`)\n       setMessage('')\n    }\n    const onPress = () => {\n        if(!message){\n            onMicrophonePress();\n        }else{\n            onSendPress();\n        }\n    }\n    return (\n        <View style={styles.container}>\n        <View style={styles.mainContainer}>\n        <FontAwesome5 name = \"laugh-beam\" size={24} color='grey'></FontAwesome5>\n\n        <TextInput placeholder = {\"Type a message\"}style = {styles.textInput}multiline value = {message} onChangeText={ setMessage}/>\n\n        <Entypo name = 'attachment' size={24} color=\"grey\" style = {styles.icon}></Entypo>\n        <Fontisto name = 'camera' size={24} color = 'grey' style = {styles.icon}></Fontisto>\n        </View>\n         \n        <TouchableOpacity onPress = {onPress}>\n        <View style = {styles.buttonContainer}>\n        {!message\n         ? <MaterialIcons name='mic' size={24} color='white'></MaterialIcons>\n         : <MaterialIcons name='send' size={28} color='white'/>\n        }\n        \n        </View>\n        </TouchableOpacity>\n        </View>\n    )\n}\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}