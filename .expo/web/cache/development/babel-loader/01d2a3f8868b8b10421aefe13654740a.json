{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useEffect, useState } from 'react';\nimport styles from \"./styles\";\nimport { useNavigation } from '@react-navigation/native';\nimport { API, graphqlOperation, Auth } from \"aws-amplify\";\nimport { createFriendPair, deleteFriendPair } from \"../../src/graphql/mutations\";\nimport { getUser } from \"../../screens/queries\";\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchListItem = function SearchListItem(props) {\n  var user = props.user;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      foundContact = _useState2[0],\n      setFoundContact = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checkMark = _useState4[0],\n      setCheckMark = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currUser = _useState6[0],\n      setCurrUser = _useState6[1];\n\n  useEffect(function () {\n    var searchContactList = function searchContactList() {\n      var _currUser, currentUser, found;\n\n      return _regeneratorRuntime.async(function searchContactList$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 3:\n              _currUser = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: _currUser.attributes.sub\n              })));\n\n            case 6:\n              currentUser = _context.sent;\n              setCurrUser(_currUser);\n              console.log(currentUser.data.getUser.contacts.items);\n              found = currentUser.data.getUser.contacts.items.filter(function (item) {\n                return item.secondUserID == user.id;\n              });\n              setFoundContact(found);\n\n              if (!(found.length >= 1)) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setCheckMark(true));\n\n            case 13:\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 15]], Promise);\n    };\n\n    searchContactList();\n  }, []);\n  var navigation = useNavigation();\n\n  var addToContacts = function addToContacts() {\n    var deletedFriendPair, newFriendPair;\n    return _regeneratorRuntime.async(function addToContacts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"add\", user.name);\n            _context2.prev = 1;\n\n            if (!checkMark) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(deleteFriendPair, {\n              input: {\n                id: foundContact[0].id\n              }\n            })));\n\n          case 5:\n            deletedFriendPair = _context2.sent;\n            console.log(\"remove contact from list\", foundContact[0].id);\n            _context2.next = 13;\n            break;\n\n          case 9:\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createFriendPair, {\n              input: {\n                firstUserID: currUser.attributes.sub,\n                secondUserID: user.id\n              }\n            })));\n\n          case 11:\n            newFriendPair = _context2.sent;\n            console.log(\"added to contacts\", newFriendPair);\n\n          case 13:\n            setCheckMark(!checkMark);\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 16]], Promise);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.lefContainer,\n        children: [_jsx(Image, {\n          source: {\n            uri: user.imageUri\n          },\n          style: styles.avatar\n        }), _jsx(View, {\n          style: styles.midContainer,\n          children: _jsx(Text, {\n            style: styles.username,\n            children: user.name\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          justifyContent: 'space-around',\n          width: \"20%\",\n          alignItems: 'stretch'\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: addToContacts,\n          children: checkMark ? _jsx(MaterialCommunityIcons, {\n            name: \"account-check-outline\",\n            size: 24,\n            color: \"grey\"\n          }) : _jsx(MaterialIcons, {\n            name: \"person-add-alt-1\",\n            size: 24,\n            color: \"grey\"\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default SearchListItem;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/SearchListItem/index.tsx"],"names":["React","useEffect","useState","styles","useNavigation","API","graphqlOperation","Auth","createFriendPair","deleteFriendPair","getUser","MaterialCommunityIcons","MaterialIcons","SearchListItem","props","user","foundContact","setFoundContact","checkMark","setCheckMark","currUser","setCurrUser","searchContactList","currentAuthenticatedUser","graphql","id","attributes","sub","currentUser","console","log","data","contacts","items","found","filter","item","secondUserID","length","navigation","addToContacts","name","input","deletedFriendPair","firstUserID","newFriendPair","container","lefContainer","uri","imageUri","avatar","midContainer","username","justifyContent","width","alignItems"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  TouchableWithoutFeedback,\n  TouchableOpacity\n} from \"react-native\";\nimport {useEffect,useState} from 'react';\nimport { User } from \"../../types\";\nimport styles from \"./styles\";\nimport moment from \"moment\";\nimport { useNavigation } from '@react-navigation/native';\nimport {API,graphqlOperation,Auth} from \"aws-amplify\";\nimport {createFriendPair,deleteFriendPair} from \"../../src/graphql/mutations\"\nimport { getUser } from '../../screens/queries';\nimport {\n    MaterialCommunityIcons,\n    MaterialIcons,\n    FontAwesome,\n    Entypo,\n    Fontisto,\n    EvilIcons,\n} from '@expo/vector-icons';\n\nexport type SearchListItemProps = {\n  user: User;\n}\n\nconst SearchListItem = (props: SearchListItemProps) => {\n  const { user } = props;\n  const [foundContact,setFoundContact] = useState(null);\n  const [checkMark,setCheckMark] = useState(false);\n  const [currUser,setCurrUser] = useState();\n  useEffect (() =>{\n    const searchContactList = async () => {\n     try{\n      const currUser = await Auth.currentAuthenticatedUser();\n      const currentUser = await API.graphql(graphqlOperation(getUser,{id: currUser.attributes.sub}));\n      setCurrUser(currUser);\n      console.log(currentUser.data.getUser.contacts.items);\n      const found = currentUser.data.getUser.contacts.items.filter(item => item.secondUserID == user.id)\n      setFoundContact(found);\n      if(found.length >= 1){return setCheckMark(true)}\n     }catch(e){\n        console.log(e);\n     }\n    }\n    \n    searchContactList();\n  },[])\n   \n  \n  const navigation = useNavigation();\n  const addToContacts = async() =>{\n      console.log(\"add\",user.name)\n      try{\n     if(checkMark){\n         //remove contact\n         const deletedFriendPair = await API.graphql(graphqlOperation(deleteFriendPair,{input:{id: foundContact[0].id}}));\n         console.log(\"remove contact from list\",foundContact[0].id);\n     }else{\n         //add contact\n        const newFriendPair = await API.graphql(graphqlOperation(createFriendPair,{input: {firstUserID: currUser.attributes.sub, secondUserID: user.id}}));\n        console.log(\"added to contacts\",newFriendPair);\n\n\n     }\n      setCheckMark(!checkMark);\n    }catch(e){\n        console.log(e);\n    }\n  }\n\n\n  return (\n    <TouchableWithoutFeedback >\n      <View style={styles.container}>\n        <View style={styles.lefContainer}>\n          <Image source={{ uri: user.imageUri }} style={styles.avatar}/>\n         \n          <View style={styles.midContainer}>\n            <Text style={styles.username}>{user.name}</Text>\n            {/*<Text numberOfLines={2} style={styles.status}>{user.status}</Text>*/}\n          </View>\n         </View>\n         \n              <View  style={{ justifyContent: 'space-around',width:\"20%\",alignItems: 'stretch' }}>\n              <TouchableOpacity onPress = {addToContacts} >\n              {checkMark?<MaterialCommunityIcons name=\"account-check-outline\" size={24} color=\"grey\" />:<MaterialIcons name=\"person-add-alt-1\" size={24} color=\"grey\" />}\n                   </TouchableOpacity>\n              </View>\n           \n        \n      </View>\n    </TouchableWithoutFeedback>\n  )\n};\n\nexport default SearchListItem;"]},"metadata":{},"sourceType":"module"}