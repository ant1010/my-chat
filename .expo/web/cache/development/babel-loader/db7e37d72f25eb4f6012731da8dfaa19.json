{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./styles\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EventListItem = function EventListItem(props) {\n  var event = props.event;\n  console.log(event.items[0]);\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: onClick,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.lefContainer,\n        children: [_jsx(Text, {\n          style: styles.username,\n          children: event.items[0].eventTime\n        }), _jsx(Text, {\n          style: styles.username,\n          children: event.items[0].eventLocation\n        })]\n      }), _jsxs(View, {\n        style: styles.midContainer,\n        children: [_jsx(Text, {\n          style: styles.status,\n          children: event.items[0].title\n        }), _jsx(Text, {\n          style: styles.status,\n          children: event.items[0].content\n        })]\n      })]\n    })\n  });\n};\n\nexport default EventListItem;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/EventListItem/index.tsx"],"names":["React","styles","useNavigation","EventListItem","props","event","console","log","items","navigation","onClick","container","lefContainer","username","eventTime","eventLocation","midContainer","status","title","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAUA,OAAOC,MAAP;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;;;AASA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA+B;AACnD,MAAQC,KAAR,GAAkBD,KAAlB,CAAQC,KAAR;AAICC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAZ;AAED,MAAMC,UAAU,GAAGP,aAAa,EAAhC;;AAEA,MAAMQ,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAKA,SACE,KAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEA,OAAnC;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACU,SAApB;AAAA,iBAEE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,YAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACY,QAApB;AAAA,oBAA+BR,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeM;AAA9C,UADF,EAEG,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,MAAM,CAACY,QAApB;AAAA,oBAA+BR,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeO;AAA9C,UAFH;AAAA,QAFF,EAMI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACe,YAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEf,MAAM,CAACgB,MAApB;AAAA,oBAA6BZ,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeU;AAA5C,UADF,EAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEjB,MAAM,CAACgB,MAApB;AAAA,oBAA6BZ,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeW;AAA5C,UAFF;AAAA,QANJ;AAAA;AADF,IADF;AAkBD,CAhCD;;AAkCA,eAAehB,aAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  TouchableWithoutFeedback,\n \n} from \"react-native\";\nimport {useEffect,useState} from 'react';\nimport { Event } from \"../../types\";\nimport styles from \"./styles\";\nimport moment from \"moment\";\nimport { useNavigation } from '@react-navigation/native';\nimport {API,graphqlOperation,Auth} from \"aws-amplify\";\nimport {createChatRoom, createChatRoomUser} from \"../../src/graphql/mutations\"\nimport { getUser } from '../../screens/queries';\n\nexport type EventListItemProps = {\n  event: Event;\n}\n\nconst EventListItem = (props: EventListItemProps) => {\n  const { event } = props;\n  \n \n  \n   console.log(event.items[0]);\n  \n  const navigation = useNavigation();\n\n  const onClick = async() => {\n   // navigate to chat room with this user\n    \n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={onClick}>\n      <View style={styles.container}>\n       \n        <View style={styles.lefContainer}>\n          <Text style={styles.username}>{event.items[0].eventTime}</Text>\n           <Text style={styles.username}>{event.items[0].eventLocation}</Text>\n        </View>\n          <View style={styles.midContainer}>\n            <Text style={styles.status}>{event.items[0].title}</Text>\n            <Text style={styles.status}>{event.items[0].content}</Text>\n            \n          \n          </View>\n        </View>\n      \n    </TouchableWithoutFeedback>\n  )\n};\n\nexport default EventListItem;"]},"metadata":{},"sourceType":"module"}