{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome, Fontisto, MaterialIcons, Feather } from '@expo/vector-icons';\nimport { NavigationContainer, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport ChatsScreen from \"../screens/ChatsScreen\";\nimport ChatRoomScreen from \"../screens/ChatRoomScreen\";\nimport ContactsScreen from \"../screens/ContactsScreen\";\nimport EventsScreen from \"../screens/EventsScreen\";\nimport EventCreation from \"../screens/EventCreation\";\nimport StatusScreen from \"../screens/StatusScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport SignOut from \"./HeaderIcons/SignOut\";\nimport Search from \"./HeaderIcons/Search\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DarkTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShadowVisible: false,\n      headerStyle: {\n        backgroundColor: 'black'\n      },\n      headerTintColor: Colors.dark.text,\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: MainTabNavigator,\n      options: {\n        title: \"MyChat\",\n        headerRight: function headerRight() {\n          return _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              width: 60,\n              justifyContent: 'space-between',\n              marginRight: 10\n            },\n            children: [_jsx(Search, {}), _jsx(MaterialCommunityIcons, {\n              name: \"dots-vertical\",\n              size: 22,\n              color: 'white'\n            }), _jsx(SignOut, {})]\n          });\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ChatRoom\",\n      component: ChatRoomScreen,\n      options: function options(_ref2) {\n        var route = _ref2.route;\n        return {\n          title: route.params.name,\n          headerRight: function headerRight() {\n            return _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                width: 100,\n                justifyContent: 'space-between',\n                marginRight: 10\n              },\n              children: [_jsx(MaterialIcons, {\n                name: \"call\",\n                size: 22,\n                color: 'white'\n              }), _jsx(Feather, {\n                name: \"video\",\n                size: 22,\n                color: 'white'\n              }), _jsx(MaterialCommunityIcons, {\n                name: \"dots-vertical\",\n                size: 22,\n                color: 'white'\n              })]\n            });\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Connections\",\n      component: ContactsScreen,\n      options: {\n        title: 'Connections'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Events\",\n      component: EventsScreen,\n      options: {\n        title: 'Events'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EventCreation\",\n      component: EventCreation,\n      options: {\n        title: 'Start a New Event'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Status\",\n      component: StatusScreen,\n      options: {\n        title: 'Status'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Search\",\n      component: SearchScreen,\n      options: {\n        title: 'Search'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar MainTab = createMaterialBottomTabNavigator();\n\nfunction MainTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(MainTab.Navigator, {\n    initialRouteName: \"Chats\",\n    children: [_jsx(MainTab.Screen, {\n      name: \"Connections\",\n      component: ContactsScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(Fontisto, {\n            name: \"camera\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"Chats\",\n      component: ChatsScreen,\n      options: {\n        tabBarLabelStyle: {\n          fontWeight: \"bold\",\n          fontSize: 12\n        }\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"Events\",\n      component: EventsScreen,\n      options: {\n        tabBarLabelStyle: {\n          fontWeight: 'bold',\n          fontSize: 12\n        }\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"Status\",\n      component: StatusScreen,\n      options: {\n        tabBarLabelStyle: {\n          fontWeight: 'bold',\n          fontSize: 12\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/navigation/index.tsx"],"names":["FontAwesome","Fontisto","MaterialIcons","Feather","NavigationContainer","DarkTheme","createNativeStackNavigator","React","createMaterialBottomTabNavigator","MaterialCommunityIcons","Colors","useColorScheme","ModalScreen","NotFoundScreen","ChatsScreen","ChatRoomScreen","ContactsScreen","EventsScreen","EventCreation","StatusScreen","SearchScreen","LinkingConfiguration","SignOut","Search","Navigation","colorScheme","Stack","RootNavigator","headerShadowVisible","headerStyle","backgroundColor","headerTintColor","dark","text","headerTitleStyle","fontWeight","MainTabNavigator","title","headerRight","flexDirection","width","justifyContent","marginRight","route","params","name","presentation","MainTab","tabBarIcon","color","tabBarLabelStyle","fontSize","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome,Fontisto,MaterialIcons,Feather } from '@expo/vector-icons';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName,View } from 'react-native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { BottomNavigation, Text } from 'react-native-paper';\nimport {Octicons,MaterialCommunityIcons} from '@expo/vector-icons';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ChatsScreen from '../screens/ChatsScreen';\nimport ChatRoomScreen from '../screens/ChatRoomScreen'\nimport ContactsScreen from '../screens/ContactsScreen';\nimport EventsScreen from '../screens/EventsScreen';\nimport EventCreation from '../screens/EventCreation';\nimport StatusScreen from '../screens/StatusScreen';\nimport SearchScreen from '../screens/SearchScreen';\nimport { RootStackParamList, MainTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport SignOut from './HeaderIcons/SignOut';\nimport Search from './HeaderIcons/Search';\nimport ChatRooms from '../data/ChatRooms';\nimport { listChatRoomUsers } from '../src/graphql/queries';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DarkTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator\n    screenOptions={{\n      headerShadowVisible:false,\n      headerStyle: {\n        backgroundColor: 'black',\n        \n      },\n      headerTintColor: Colors.dark.text,\n      \n      headerTitleStyle: {\n        fontWeight: 'bold',\n        \n      }\n\n    }}\n    >\n      <Stack.Screen name=\"Root\" component={MainTabNavigator} options={{\n        title:\"MyChat\",\n        headerRight: () => (\n          <View style = {{flexDirection: 'row', width: 60,justifyContent: 'space-between', marginRight:10}}>\n          <Search/>\n          <MaterialCommunityIcons name = 'dots-vertical' size = {22} color = {'white'}/>\n          <SignOut/>\n          </View>\n        )\n        \n        }} />\n      \n      <Stack.Screen name=\"ChatRoom\" component={ChatRoomScreen} options={({route}) =>  ({\n        title:route.params.name,\n        headerRight: () =>(\n          <View style = {{flexDirection:'row', width: 100,justifyContent: 'space-between', marginRight:10}}>\n            <MaterialIcons name=\"call\" size={22} color={'white'}/>\n            <Feather name =\"video\" size={22} color={'white'}/>\n            <MaterialCommunityIcons name=\"dots-vertical\" size={22} color={'white'}/>\n          </View>\n        )\n\n      })}\n        \n      \n         />\n      \n      <Stack.Screen name=\"Connections\" component={ContactsScreen} options={{ title: 'Connections' }} />\n      <Stack.Screen name=\"Events\" component={EventsScreen} options={{ title: 'Events' }} />\n      <Stack.Screen name=\"EventCreation\" component={EventCreation} options={{ title: 'Start a New Event' }} />\n      <Stack.Screen name=\"Status\" component={StatusScreen} options={{ title: 'Status' }} />\n      <Stack.Screen name=\"Search\" component={SearchScreen} options={{ title: 'Search' }} />\n      \n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst MainTab = createMaterialBottomTabNavigator<MainTabParamList>();\n\nfunction MainTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <MainTab.Navigator\n        initialRouteName=\"Chats\"\n       \n      >\n      <MainTab.Screen\n        name=\"Connections\"\n        component={ContactsScreen}\n        options={{\n          \n          tabBarIcon:({color})=><Fontisto name=\"camera\" color={color} />,\n         // tabBarLabel:()=>null,\n          \n        }}\n      />\n      <MainTab.Screen\n        name=\"Chats\"\n        component={ChatsScreen} options={{tabBarLabelStyle:{fontWeight:\"bold\",fontSize:12}}}\n        \n      />\n      <MainTab.Screen\n        name=\"Events\"\n        component={EventsScreen} options={{tabBarLabelStyle:{fontWeight:'bold',fontSize:12}}}\n        \n      />\n      <MainTab.Screen\n        name=\"Status\"\n        component={StatusScreen}options={{tabBarLabelStyle:{fontWeight:'bold',fontSize:12}}}\n        \n      />\n    </MainTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}