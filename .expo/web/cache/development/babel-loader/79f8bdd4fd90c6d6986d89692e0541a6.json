{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { View } from \"../components/Themed\";\nimport ChatListItem from \"../components/ChatListItem\";\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport NewMessageButton from \"../components/NewMessageButton\";\nimport { useEffect, useState } from \"react\";\nimport { getUser } from \"./queries\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatsScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatRooms = _useState2[0],\n      setChatRooms = _useState2[1];\n\n  useEffect(function () {\n    var fetchChatRooms = function fetchChatRooms() {\n      var userInfo, userData;\n      return _regeneratorRuntime.async(function fetchChatRooms$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 3:\n              userInfo = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 6:\n              userData = _context.sent;\n              setChatRooms(userData.data.getUser.chatRoomUser.items);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    fetchChatRooms();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      style: {\n        width: '100%'\n      },\n      data: chatRooms,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ChatListItem, {\n          chatRoom: item.chatRoom\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(NewMessageButton, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/ChatsScreen.tsx"],"names":["React","View","ChatListItem","API","graphqlOperation","Auth","NewMessageButton","useEffect","useState","getUser","ChatsScreen","chatRooms","setChatRooms","fetchChatRooms","currentAuthenticatedUser","userInfo","graphql","id","attributes","sub","userData","data","chatRoomUser","items","console","log","styles","container","width","item","chatRoom","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,IAAT;AACA,OAAOC,YAAP;AACA,SACEC,GADF,EAEEC,gBAFF,EAGEC,IAHF,QAIO,aAJP;AAOA,OAAOC,gBAAP;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,SAASC,OAAT;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAEpC,kBAAkCF,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEIR,IAAI,CAACS,wBAAL,EAFJ;;AAAA;AAEbC,cAAAA,QAFa;AAAA;AAAA,+CAIIZ,GAAG,CAACa,OAAJ,CACrBZ,gBAAgB,CACdK,OADc,EACL;AACPQ,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UAAT,CAAoBC;AADjB,eADK,CADK,CAJJ;;AAAA;AAIbC,cAAAA,QAJa;AAYnBR,cAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAT,CAAcZ,OAAd,CAAsBa,YAAtB,CAAmCC,KAApC,CAAZ;AAZmB;AAAA;;AAAA;AAAA;AAAA;AAcnBC,cAAAA,OAAO,CAACC,GAAR;;AAdmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAiBAZ,IAAAA,cAAc;AACf,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OADT;AAEE,MAAA,IAAI,EAAEjB,SAFR;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGkB,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,YAAD;AAAc,UAAA,QAAQ,EAAEA,IAAI,CAACC;AAA7B,UAAd;AAAA,OAHd;AAIE,MAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,eAAUA,IAAI,CAACZ,EAAf;AAAA;AAJhB,MADF,EAOE,KAAC,gBAAD,KAPF;AAAA,IADF;AAWD;AAED,IAAMS,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {FlatList, StyleSheet} from 'react-native';\nimport { View } from '../components/Themed';\nimport ChatListItem from '../components/ChatListItem';\nimport {\n  API,\n  graphqlOperation,\n  Auth,\n} from 'aws-amplify';\n\nimport chatRooms from '../data/ChatRooms';\nimport NewMessageButton from \"../components/NewMessageButton\";\nimport {useEffect, useState} from \"react\";\n\nimport { getUser } from './queries';\n\nexport default function ChatsScreen() {\n\n  const [chatRooms, setChatRooms] = useState([]);\n\n  useEffect(() => {\n    const fetchChatRooms = async () => {\n      try {\n        const userInfo = await Auth.currentAuthenticatedUser();\n\n        const userData = await API.graphql(\n          graphqlOperation(\n            getUser, {\n              id: userInfo.attributes.sub,\n            }\n          )\n        )\n\n        setChatRooms(userData.data.getUser.chatRoomUser.items)\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchChatRooms();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        style={{width: '100%'}}\n        data={chatRooms}\n        renderItem={({ item }) => <ChatListItem chatRoom={item.chatRoom} />}\n        keyExtractor={(item) => item.id}\n      />\n      <NewMessageButton />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n});"]},"metadata":{},"sourceType":"module"}