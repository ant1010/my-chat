{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { useEffect } from 'react';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Amplify, { Auth } from 'aws-amplify';\nimport awsconfig from \"./src/aws-exports\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nAmplify.configure(_objectSpread(_objectSpread({}, awsconfig), {}, {\n  Analytics: {\n    disabled: true\n  }\n}));\n\nfunction App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo, _userInfo;\n\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser({\n                bypassCache: true\n              }));\n\n            case 2:\n              userInfo = _context.sent;\n\n              if (!userInfo) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticated);\n\n            case 6:\n              _userInfo = _context.sent;\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUser();\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsxs(SafeAreaProvider, {\n      children: [_jsx(Navigation, {\n        colorScheme: colorScheme\n      }), _jsx(StatusBar, {})]\n    });\n  }\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/App.tsx"],"names":["StatusBar","SafeAreaProvider","useEffect","useCachedResources","useColorScheme","Navigation","withAuthenticator","Amplify","Auth","awsconfig","configure","Analytics","disabled","App","isLoadingComplete","colorScheme","fetchUser","currentAuthenticatedUser","bypassCache","userInfo","currentAuthenticated"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AAGA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,OAAP,IAAkBC,IAAlB,QAAmD,aAAnD;AACA,OAAOC,SAAP;;;AACAF,OAAO,CAACG,SAAR,iCACKD,SADL;AAEEE,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AADD;AAFb;;AAOC,SAASC,GAAT,GAAe;AACd,MAAMC,iBAAiB,GAAGX,kBAAkB,EAA5C;AACA,MAAMY,WAAW,GAAGX,cAAc,EAAlC;AAEFF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACMR,IAAI,CAACS,wBAAL,CAA8B;AAACC,gBAAAA,WAAW,EAAC;AAAb,eAA9B,CADN;;AAAA;AACXC,cAAAA,QADW;;AAAA,mBAGdA,QAHc;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAIOX,IAAI,CAACY,oBAJZ;;AAAA;AAIVD,cAAAA,SAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAOAH,IAAAA,SAAS;AACV,GATQ,EASP,EATO,CAAT;;AAcE,MAAI,CAACF,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,MAAC,gBAAD;AAAA,iBACE,KAAC,UAAD;AAAY,QAAA,WAAW,EAAEC;AAAzB,QADF,EAEE,KAAC,SAAD,KAFF;AAAA,MADF;AAMD;AACF;;AACD,eAAeT,iBAAiB,CAACO,GAAD,CAAhC","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport {useEffect }from 'react';\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport {getUser} from './src/graphql/queries'\n// @ts-ignore\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Amplify, { Auth ,API,graphqlOperation} from 'aws-amplify'\nimport awsconfig from './src/aws-exports'\nAmplify.configure({\n  ...awsconfig,\n  Analytics: { \n    disabled: true\n  }\n});\n\n function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\nuseEffect(() => {\n  const fetchUser = async () => {\n   const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\n  \n   if(userInfo){\n    const userInfo = await Auth.currentAuthenticated\n   }\n  }\n  fetchUser();\n},[])\n\n\n\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\nexport default withAuthenticator(App)"]},"metadata":{},"sourceType":"module"}