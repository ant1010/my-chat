{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { View } from \"../components/Themed\";\nimport ContactListItem from \"../components/ContactListItem\";\nimport { listUsers } from \"../src/graphql/queries\";\nimport { useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ContactsScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      var usersData;\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listUsers)));\n\n            case 3:\n              usersData = _context.sent;\n              setUsers(usersData.data.listUsers.items);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    fetchUsers();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      style: {\n        width: '100%'\n      },\n      data: users,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ContactListItem, {\n          user: item\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/ContactsScreen.tsx"],"names":["React","API","graphqlOperation","View","ContactListItem","listUsers","useEffect","useState","ContactsScreen","users","setUsers","fetchUsers","graphql","usersData","data","items","console","log","styles","container","width","item","id","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,IAAT;AACA,OAAOC,eAAP;AAEA,SAASC,SAAT;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAEvC,kBAA0BD,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMK,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAESV,GAAG,CAACW,OAAJ,CACtBV,gBAAgB,CACdG,SADc,CADM,CAFT;;AAAA;AAETQ,cAAAA,SAFS;AAOfH,cAAAA,QAAQ,CAACG,SAAS,CAACC,IAAV,CAAeT,SAAf,CAAyBU,KAA1B,CAAR;AAPe;AAAA;;AAAA;AAAA;AAAA;AASfC,cAAAA,OAAO,CAACC,GAAR;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAYAN,IAAAA,UAAU;AACX,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OADT;AAEE,MAAA,IAAI,EAAEX,KAFR;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGY,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,eAAD;AAAiB,UAAA,IAAI,EAAEA;AAAvB,UAAd;AAAA,OAHd;AAIE,MAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAf;AAAA;AAJhB;AADF,IADF;AAUD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {FlatList, StyleSheet} from 'react-native';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { View } from '../components/Themed';\nimport ContactListItem from '../components/ContactListItem';\n\nimport { listUsers }  from '../src/graphql/queries';\nimport {useEffect, useState} from \"react\";\n\nexport default function ContactsScreen() {\n\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const usersData = await API.graphql(\n          graphqlOperation(\n            listUsers\n          )\n        )\n        setUsers(usersData.data.listUsers.items);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchUsers();\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        style={{width: '100%'}}\n        data={users}\n        renderItem={({ item }) => <ContactListItem user={item} />}\n        keyExtractor={(item) => item.id}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}