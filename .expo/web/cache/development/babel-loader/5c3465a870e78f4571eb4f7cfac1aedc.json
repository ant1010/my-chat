{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { View } from \"../components/Themed\";\nimport ChatListItem from \"../components/ChatListItem\";\nimport { useEffect } from \"react\";\nimport chatRooms from \"../data/ChatRooms\";\nimport NewMessageButton from \"../components/NewMessageButton\";\nimport { Auth } from 'aws-amplify';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nuseEffect(function () {\n  var fetchChatRooms = function fetchChatRooms() {\n    var userInfo, userDtat;\n    return _regeneratorRuntime.async(function fetchChatRooms$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 3:\n            userInfo = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  fetchChatRooms();\n}, []);\nexport default function ChatsScreen() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      style: {\n        width: '100%'\n      },\n      data: chatRooms,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ChatListItem, {\n          chatRoom: item\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(NewMessageButton, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/ChatsScreen.tsx"],"names":["React","View","ChatListItem","useEffect","chatRooms","NewMessageButton","Auth","fetchChatRooms","currentAuthenticatedUser","userInfo","console","log","ChatsScreen","styles","container","width","item","id","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,IAAT;AACA,OAAOC,YAAP;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,SAAP;AACA,OAAOC,gBAAP;AACA,SAGIC,IAHJ,QAKM,aALN;;;AAOAH,SAAS,CAAC,YAAM;AACb,MAAMI,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESD,IAAI,CAACE,wBAAL,EAFT;;AAAA;AAERC,YAAAA,QAFQ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMdC,YAAAA,OAAO,CAACC,GAAR;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AASAJ,EAAAA,cAAc;AAChB,CAXQ,EAWN,EAXM,CAAT;AAaA,eAAe,SAASK,WAAT,GAAuB;AACpC,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OADT;AAEE,MAAA,IAAI,EAAEX,SAFR;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGY,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,YAAD;AAAc,UAAA,QAAQ,EAAEA;AAAxB,UAAd;AAAA,OAHd;AAIE,MAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAf;AAAA;AAJhB,MADF,EAOE,KAAC,gBAAD,KAPF;AAAA,IADF;AAWD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {FlatList, StyleSheet} from 'react-native';\nimport { View } from '../components/Themed';\nimport ChatListItem from '../components/ChatListItem';\nimport {useEffect} from \"react\";\nimport chatRooms from '../data/ChatRooms';\nimport NewMessageButton from \"../components/NewMessageButton\";\nimport {\n    API,\n    graphqlOperation,\n    Auth,\n\n}from 'aws-amplify';\nimport {getUser} from '../src/graphql/queries';\nuseEffect(() => {\n   const fetchChatRooms = async () => {\n        try{\n            const userInfo = await Auth.currentAuthenticatedUser();\n            \n            const userDtat\n        }catch(e){\n            console.log(e);\n        }\n   }\n   fetchChatRooms();\n}, [])\n\nexport default function ChatsScreen() {\n  return (\n    <View style={styles.container}>\n      <FlatList\n        style={{width: '100%'}}\n        data={chatRooms}\n        renderItem={({ item }) => <ChatListItem chatRoom={item} />}\n        keyExtractor={(item) => item.id}\n      />\n      <NewMessageButton />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n});"]},"metadata":{},"sourceType":"module"}