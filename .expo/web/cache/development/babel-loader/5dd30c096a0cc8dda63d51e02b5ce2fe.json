{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\nimport { Auth } from \"aws-amplify\";\nimport { MaterialCommunityIcons, MaterialIcons, FontAwesome5, Entypo, Fontisto } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InputBox = function InputBox() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myUserId = _useState4[0],\n      setMyUserId = _useState4[1];\n\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userInfo = _context.sent;\n              setMySUerId;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }, []);\n\n  var onMicrophonePress = function onMicrophonePress() {\n    console.warn('Microphone');\n  };\n\n  var onSendPress = function onSendPress() {\n    console.warn(\"Sending: \" + message);\n    setMessage('');\n  };\n\n  var onPress = function onPress() {\n    if (!message) {\n      onMicrophonePress();\n    } else {\n      onSendPress();\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.mainContainer,\n      children: [_jsx(FontAwesome5, {\n        name: \"laugh-beam\",\n        size: 24,\n        color: \"grey\"\n      }), _jsx(TextInput, {\n        placeholder: \"Type a message\",\n        style: styles.textInput,\n        multiline: true,\n        value: message,\n        onChangeText: setMessage\n      }), _jsx(Entypo, {\n        name: \"attachment\",\n        size: 24,\n        color: \"grey\",\n        style: styles.icon\n      }), !message && _jsx(Fontisto, {\n        name: \"camera\",\n        size: 24,\n        color: \"grey\",\n        style: styles.icon\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: onPress,\n      children: _jsx(View, {\n        style: styles.buttonContainer,\n        children: !message ? _jsx(MaterialCommunityIcons, {\n          name: \"microphone\",\n          size: 28,\n          color: \"white\"\n        }) : _jsx(MaterialIcons, {\n          name: \"send\",\n          size: 28,\n          color: \"white\"\n        })\n      })\n    })]\n  });\n};\n\nexport default InputBox;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/InputBox/index.tsx"],"names":["React","useState","useEffect","styles","Auth","MaterialCommunityIcons","MaterialIcons","FontAwesome5","Entypo","Fontisto","InputBox","message","setMessage","myUserId","setMyUserId","fetchUser","currentAuthenticatedUser","userInfo","setMySUerId","onMicrophonePress","console","warn","onSendPress","onPress","container","mainContainer","textInput","icon","buttonContainer"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport {View, Text, TextInput, TouchableOpacity,} from \"react-native\";\nimport styles from './styles';\nimport{API,Auth,graphqlOperation,} from \"aws-amplify\";\nimport {createMessage} from \"../../src/graphql/mutations\";\nimport {\n  MaterialCommunityIcons,\n  MaterialIcons,\n  FontAwesome5,\n  Entypo,\n  Fontisto,\n} from '@expo/vector-icons';\n\nconst InputBox = () => {\n\n  const [message, setMessage] = useState('');\n  const [myUserId, setMyUserId] = useState(null);\n\n    useEffect(() => {\n      const fetchUser = async () => {\n        const userInfo = await Auth.currentAuthenticatedUser();\n        setMySUerId\n      }\n    },[])\n  const onMicrophonePress = () => {\n    console.warn('Microphone')\n  }\n\n  const onSendPress = () => {\n    console.warn(`Sending: ${message}`)\n\n    // send the message to the backend\n\n    setMessage('');\n  }\n\n  const onPress = () => {\n    if (!message) {\n      onMicrophonePress();\n    } else {\n      onSendPress();\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.mainContainer}>\n        <FontAwesome5 name=\"laugh-beam\" size={24} color=\"grey\" />\n        <TextInput\n          placeholder={\"Type a message\"}\n          style={styles.textInput}\n          multiline\n          value={message}\n          onChangeText={setMessage}\n        />\n        <Entypo name=\"attachment\" size={24} color=\"grey\" style={styles.icon} />\n        {!message && <Fontisto name=\"camera\" size={24} color=\"grey\" style={styles.icon} />}\n      </View>\n      <TouchableOpacity onPress={onPress}>\n        <View style={styles.buttonContainer}>\n          {!message\n            ? <MaterialCommunityIcons name=\"microphone\" size={28} color=\"white\" />\n            : <MaterialIcons name=\"send\" size={28} color=\"white\" />}\n        </View>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}