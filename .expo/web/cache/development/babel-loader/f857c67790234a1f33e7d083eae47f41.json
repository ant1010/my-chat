{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useRoute } from '@react-navigation/native';\nimport chatRoomData from \"../data/Chats\";\nimport ChatMessage from \"../components/ChatMesage\";\nimport { useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport InputBox from \"../components/InputBox\";\nimport { messagesByChatRoom } from \"../src/graphql/queries\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatRoomScreen = function ChatRoomScreen() {\n  var _ref,\n      _ref2 = _slicedToArray(_ref, 1),\n      messages = _ref2[0];\n\n  var route = useRoute();\n  useEffect(function () {\n    var fetchMessages = function fetchMessages() {\n      var messageData;\n      return _regeneratorRuntime.async(function fetchMessages$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(messagesByChatRoom, {\n                chatRoomID: route.params.id,\n                sortDirection: \"DESC\"\n              })));\n\n            case 2:\n              messageData = _context.sent;\n              console.log(messageData);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchMessages();\n  }, []);\n  return _jsxs(View, {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: [_jsx(FlatList, {\n      data: chatRoomData.messages,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(ChatMessage, {\n          message: item\n        });\n      },\n      inverted: true\n    }), _jsx(InputBox, {\n      chatRoomID: route.params.id\n    })]\n  });\n};\n\nexport default ChatRoomScreen;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/ChatRoomScreen.tsx"],"names":["React","useRoute","chatRoomData","ChatMessage","useEffect","API","graphqlOperation","InputBox","messagesByChatRoom","ChatRoomScreen","messages","route","fetchMessages","graphql","chatRoomID","params","id","sortDirection","messageData","console","log","width","height","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,GAAR,EAAYC,gBAAZ,QAAmC,aAAnC;AACA,OAAOC,QAAP;AACA,SAAQC,kBAAR;;;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B;AAAA;AAAA,MAAOC,QAAP;;AACA,MAAMC,KAAK,GAAGV,QAAQ,EAAtB;AAGAG,EAAAA,SAAS,CAAC,YAAK;AACb,QAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACMP,GAAG,CAACQ,OAAJ,CAAYP,gBAAgB,CAACE,kBAAD,EAAoB;AAACM,gBAAAA,UAAU,EAACH,KAAK,CAACI,MAAN,CAAaC,EAAzB;AAA4BC,gBAAAA,aAAa,EAAC;AAA1C,eAApB,CAA5B,CADN;;AAAA;AACdC,cAAAA,WADc;AAEpBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAIAN,IAAAA,aAAa;AACd,GANQ,EAMP,EANO,CAAT;AAOA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAb;AAAA,eACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEpB,YAAY,CAACQ,QADrB;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGa,IAAH,SAAGA,IAAH;AAAA,eAAc,KAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB,UAAd;AAAA,OAFd;AAGE,MAAA,QAAQ;AAHV,MADF,EAOE,KAAC,QAAD;AAAU,MAAA,UAAU,EAAIZ,KAAK,CAACI,MAAN,CAAaC;AAArC,MAPF;AAAA,IADF;AAWD,CAvBD;;AAyBA,eAAeP,cAAf","sourcesContent":["import React from 'react';\nimport {FlatList, Text, ImageBackground ,View} from 'react-native';\n\nimport { useRoute } from '@react-navigation/native';\n\nimport chatRoomData from '../data/Chats';\nimport ChatMessage from \"../components/ChatMesage\";\nimport {useEffect} from 'react';\nimport {API,graphqlOperation} from 'aws-amplify';\nimport InputBox from \"../components/InputBox\";\nimport {messagesByChatRoom} from '../src/graphql/queries';\nconst ChatRoomScreen = () => {\n  const [messages]\n  const route = useRoute();\n\n  // console.log(route.params)\n  useEffect(() =>{\n    const fetchMessages = async () => {\n      const messageData = await API.graphql(graphqlOperation(messagesByChatRoom,{chatRoomID:route.params.id,sortDirection:\"DESC\"}))\n      console.log(messageData);\n    }\n    fetchMessages();\n  },[])\n  return (\n    <View style={{width: '100%', height: '100%'}} >\n      <FlatList\n        data={chatRoomData.messages}\n        renderItem={({ item }) => <ChatMessage message={item} />}\n        inverted\n      />\n\n      <InputBox chatRoomID = {route.params.id} />\n    </View>\n  );\n}\n\nexport default ChatRoomScreen;"]},"metadata":{},"sourceType":"module"}