{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { View } from \"../components/Themed\";\nimport EventListItem from \"../components/EventListItem\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { listEventss } from \"../src/graphql/queries\";\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function EventsScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      events = _useState2[0],\n      setEvents = _useState2[1];\n\n  useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      var userData;\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listEventss)));\n\n            case 3:\n              userData = _context.sent;\n              console.log(userData);\n              setEvents(userData.data.listEventss.items);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    fetchUsers();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      style: {\n        width: '100%'\n      },\n      data: events,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(EventListItem, {\n          event: item\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/EventsScreen.tsx"],"names":["React","View","EventListItem","API","graphqlOperation","listEventss","useEffect","useState","EventsScreen","events","setEvents","fetchUsers","graphql","userData","console","log","data","items","styles","container","width","item","id","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,IAAT;AACA,OAAOC,aAAP;AACA,SAAQC,GAAR,EAAYC,gBAAZ,QAAmC,aAAnC;AACA,SAAQC,WAAR;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;;AAEA,eAAe,SAASC,YAAT,GAAwB;AACnC,kBAA2BD,QAAQ,CAAC,EAAD,CAAnC;AAAA;AAAA,MAAOE,MAAP;AAAA,MAAcC,SAAd;;AACAJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMK,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEYR,GAAG,CAACS,OAAJ,CAAYR,gBAAgB,CAACC,WAAD,CAA5B,CAFZ;;AAAA;AAELQ,cAAAA,QAFK;AAGXC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,cAAAA,SAAS,CAACG,QAAQ,CAACG,IAAT,CAAcX,WAAd,CAA0BY,KAA3B,CAAT;AAJW;AAAA;;AAAA;AAAA;AAAA;AAMXH,cAAAA,OAAO,CAACC,GAAR;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AASDJ,IAAAA,UAAU;AACZ,GAXQ,EAWN,EAXM,CAAT;AAYF,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OADT;AAEE,MAAA,IAAI,EAAEX,MAFR;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGY,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,aAAD;AAAe,UAAA,KAAK,EAAEA;AAAtB,UAAd;AAAA,OAHd;AAIE,MAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAf;AAAA;AAJhB;AADF,IADF;AAYD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {FlatList, StyleSheet} from 'react-native';\nimport { View } from '../components/Themed';\nimport EventListItem from '../components/EventListItem';\nimport {API,graphqlOperation} from 'aws-amplify';\nimport {listEventss} from '../src/graphql/queries';\nimport {useEffect,useState} from 'react';\nimport NewMessageButton from \"../components/NewMessageButton\";\nexport default function EventsScreen() {\n    const [events,setEvents] = useState([]);\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try{\n                const userData = await API.graphql(graphqlOperation(listEventss));\n                console.log(userData);\n                setEvents(userData.data.listEventss.items);\n            }catch(e){\n                console.log(e);\n            }\n        }\n       fetchUsers();\n    }, [])\n  return (\n    <View style={styles.container}>\n      <FlatList\n        style={{width: '100%'}}\n        data={events}\n        renderItem={({ item }) => <EventListItem event={item} />}\n        keyExtractor={(item) => item.id}\n      />\n      \n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}