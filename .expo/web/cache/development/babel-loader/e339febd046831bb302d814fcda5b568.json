{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./styles\";\nimport { useNavigation } from '@react-navigation/native';\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createChatRoom, createChatRoomUser } from \"../../src/graphql/mutations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var user = props.user;\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    var newChatRoomData, newChatRoom, newUserChatRoom;\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoom, {\n              input: {}\n            })));\n\n          case 3:\n            newChatRoomData = _context.sent;\n\n            if (newChatRoomData.data) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(\"Failed to create a chat room\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            newChatRoom = newChatRoomData.data.createChatRoom;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(API.graphqlOperation(createChatRoomUser, {\n              userID: user.id,\n              chatRoomID: newChatRoom.id\n            }));\n\n          case 10:\n            newUserChatRoom = _context.sent;\n            console.log(newChatRoom);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: onClick,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.lefContainer,\n        children: [_jsx(Image, {\n          source: {\n            uri: user.imageUri\n          },\n          style: styles.avatar\n        }), _jsx(View, {\n          style: styles.midContainer,\n          children: _jsx(Text, {\n            style: styles.username,\n            children: user.name\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default ContactListItem;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/ContactListItem/index.tsx"],"names":["React","styles","useNavigation","API","graphqlOperation","createChatRoom","createChatRoomUser","ContactListItem","props","user","navigation","onClick","graphql","input","newChatRoomData","data","console","log","newChatRoom","userID","id","chatRoomID","newUserChatRoom","container","lefContainer","uri","imageUri","avatar","midContainer","username","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAQA,OAAOC,MAAP;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAQC,GAAR,EAAYC,gBAAZ,QAAmC,aAAnC;AACA,SAAQC,cAAR,EAAwBC,kBAAxB;;;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAiC;AACvD,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;AAEA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;;AAEA,MAAMS,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGoBR,GAAG,CAACS,OAAJ,CAAYR,gBAAgB,CAACC,cAAD,EAAgB;AAACQ,cAAAA,KAAK,EAAC;AAAP,aAAhB,CAA5B,CAHpB;;AAAA;AAGJC,YAAAA,eAHI;;AAAA,gBAINA,eAAe,CAACC,IAJV;AAAA;AAAA;AAAA;;AAKNC,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AALM;;AAAA;AAQJC,YAAAA,WARI,GAQUJ,eAAe,CAACC,IAAhB,CAAqBV,cAR/B;AAAA;AAAA,6CASoBF,GAAG,CAACC,gBAAJ,CAAqBE,kBAArB,EAAwC;AAACa,cAAAA,MAAM,EAAEV,IAAI,CAACW,EAAd;AAAiBC,cAAAA,UAAU,EAACH,WAAW,CAACE;AAAxC,aAAxC,CATpB;;AAAA;AASJE,YAAAA,eATI;AAUVN,YAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AAVU;AAAA;;AAAA;AAAA;AAAA;AAaTF,YAAAA,OAAO,CAACC,GAAR;;AAbS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAiBA,SACE,KAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEN,OAAnC;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACsB,SAApB;AAAA,gBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAACuB,YAApB;AAAA,mBACE,KAAC,KAAD;AAAO,UAAA,MAAM,EAAE;AAAEC,YAAAA,GAAG,EAAEhB,IAAI,CAACiB;AAAZ,WAAf;AAAuC,UAAA,KAAK,EAAEzB,MAAM,CAAC0B;AAArD,UADF,EAGE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE1B,MAAM,CAAC2B,YAApB;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE3B,MAAM,CAAC4B,QAApB;AAAA,sBAA+BpB,IAAI,CAACqB;AAApC;AADF,UAHF;AAAA;AADF;AADF,IADF;AAcD,CApCD;;AAsCA,eAAevB,eAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  TouchableWithoutFeedback\n} from \"react-native\";\nimport { User } from \"../../types\";\nimport styles from \"./styles\";\nimport moment from \"moment\";\nimport { useNavigation } from '@react-navigation/native';\nimport {API,graphqlOperation} from \"aws-amplify\";\nimport {createChatRoom, createChatRoomUser} from \"../../src/graphql/mutations\"\n\nexport type ContactListItemProps = {\n  user: User;\n}\n\nconst ContactListItem = (props: ContactListItemProps) => {\n  const { user } = props;\n\n  const navigation = useNavigation();\n\n  const onClick = async() => {\n   // navigate to chat room with this user\n     try{\n        const newChatRoomData = await API.graphql(graphqlOperation(createChatRoom,{input:{}}))\n        if(!newChatRoomData.data){\n            console.log(\"Failed to create a chat room\");\n            return;\n        }\n        const newChatRoom = newChatRoomData.data.createChatRoom;\n        const newUserChatRoom = await API.graphqlOperation(createChatRoomUser,{userID: user.id,chatRoomID:newChatRoom.id})\n        console.log(newChatRoom);\n\n     }catch(e){\n         console.log(e);\n     }\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={onClick}>\n      <View style={styles.container}>\n        <View style={styles.lefContainer}>\n          <Image source={{ uri: user.imageUri }} style={styles.avatar}/>\n\n          <View style={styles.midContainer}>\n            <Text style={styles.username}>{user.name}</Text>\n            {/*<Text numberOfLines={2} style={styles.status}>{user.status}</Text>*/}\n          </View>\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  )\n};\n\nexport default ContactListItem;"]},"metadata":{},"sourceType":"module"}