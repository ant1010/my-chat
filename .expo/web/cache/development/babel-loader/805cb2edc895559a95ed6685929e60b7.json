{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useRoute } from '@react-navigation/native';\nimport chatRoomData from \"../data/Chats\";\nimport ChatMessage from \"../components/ChatMesage\";\nimport { useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport InputBox from \"../components/InputBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatRoomScreen = function ChatRoomScreen() {\n  var route = useRoute();\n  useEffect(function () {\n    var fetchMessages = function fetchMessages() {\n      var messageData;\n      return _regeneratorRuntime.async(function fetchMessages$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(messagesByCHatRoom)));\n\n            case 2:\n              messageData = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchMessages();\n  }, {});\n  return _jsxs(View, {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: [_jsx(FlatList, {\n      data: chatRoomData.messages,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ChatMessage, {\n          message: item\n        });\n      },\n      inverted: true\n    }), _jsx(InputBox, {\n      chatRoomID: route.params.id\n    })]\n  });\n};\n\nexport default ChatRoomScreen;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/ChatRoomScreen.tsx"],"names":["React","useRoute","chatRoomData","ChatMessage","useEffect","API","graphqlOperation","InputBox","ChatRoomScreen","route","fetchMessages","graphql","messagesByCHatRoom","messageData","width","height","messages","item","params","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,GAAR,EAAYC,gBAAZ,QAAmC,aAAnC;AACA,OAAOC,QAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAE3B,MAAMC,KAAK,GAAGR,QAAQ,EAAtB;AAGAG,EAAAA,SAAS,CAAC,YAAK;AACb,QAAMM,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACML,GAAG,CAACM,OAAJ,CAAYL,gBAAgB,CAACM,kBAAD,CAA5B,CADN;;AAAA;AACdC,cAAAA,WADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAGAH,IAAAA,aAAa;AACd,GALQ,EAKP,EALO,CAAT;AAMA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAb;AAAA,eACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEb,YAAY,CAACc,QADrB;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB,UAAd;AAAA,OAFd;AAGE,MAAA,QAAQ;AAHV,MADF,EAOE,KAAC,QAAD;AAAU,MAAA,UAAU,EAAIR,KAAK,CAACS,MAAN,CAAaC;AAArC,MAPF;AAAA,IADF;AAWD,CAtBD;;AAwBA,eAAeX,cAAf","sourcesContent":["import React from 'react';\nimport {FlatList, Text, ImageBackground ,View} from 'react-native';\n\nimport { useRoute } from '@react-navigation/native';\n\nimport chatRoomData from '../data/Chats';\nimport ChatMessage from \"../components/ChatMesage\";\nimport {useEffect} from 'react';\nimport {API,graphqlOperation} from 'aws-amplify';\nimport InputBox from \"../components/InputBox\";\nimport {messageByChatRoom} from '../src/graphql/queries';\nconst ChatRoomScreen = () => {\n\n  const route = useRoute();\n\n  // console.log(route.params)\n  useEffect(() =>{\n    const fetchMessages = async () => {\n      const messageData = await API.graphql(graphqlOperation(messagesByCHatRoom,))\n    }\n    fetchMessages();\n  },{})\n  return (\n    <View style={{width: '100%', height: '100%'}} >\n      <FlatList\n        data={chatRoomData.messages}\n        renderItem={({ item }) => <ChatMessage message={item} />}\n        inverted\n      />\n\n      <InputBox chatRoomID = {route.params.id} />\n    </View>\n  );\n}\n\nexport default ChatRoomScreen;"]},"metadata":{},"sourceType":"module"}