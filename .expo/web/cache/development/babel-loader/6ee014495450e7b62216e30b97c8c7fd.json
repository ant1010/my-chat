{"ast":null,"code":"export var getUser = \"\\n  query GetUser($id: ID!) {\\n    getUser(id: $id) {\\n      id\\n      name\\n      imageUri\\n      status\\n      contacts {\\n        items {\\n          id\\n          firstUserID\\n          secondUserID\\n          status\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      chatRoomUser {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      eventUser {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n      owner\\n    }\\n  }\\n\";\nexport var listUsers = \"\\n  query ListUsers(\\n    $filter: ModelUserFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getFriendPair = \"\\n  query GetFriendPair($id: ID!) {\\n    getFriendPair(id: $id) {\\n      id\\n      firstUserID\\n      secondUserID\\n      userOne {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      userTwo {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      status\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listFriendPairs = \"\\n  query ListFriendPairs(\\n    $filter: ModelFriendPairFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listFriendPairs(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        firstUserID\\n        secondUserID\\n        userOne {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        userTwo {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        status\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getChatRoomUser = \"\\n  query GetChatRoomUser($id: ID!) {\\n    getChatRoomUser(id: $id) {\\n      id\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listChatRoomUsers = \"\\n  query ListChatRoomUsers(\\n    $filter: ModelChatRoomUserFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listChatRoomUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        userID\\n        chatRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        chatRoom {\\n          id\\n          lastMessageID\\n          createdAt\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getChatRoom = \"\\n  query GetChatRoom($id: ID!) {\\n    getChatRoom(id: $id) {\\n      id\\n      chatRoomUsers {\\n        items {\\n          id\\n          userID\\n          chatRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      messages {\\n        items {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastMessageID\\n      lastMessage {\\n        id\\n        createdAt\\n        content\\n        userID\\n        chatRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        chatRoom {\\n          id\\n          lastMessageID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listChatRooms = \"\\n  query ListChatRooms(\\n    $filter: ModelChatRoomFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listChatRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getMessage = \"\\n  query GetMessage($id: ID!) {\\n    getMessage(id: $id) {\\n      id\\n      createdAt\\n      content\\n      userID\\n      chatRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      chatRoom {\\n        id\\n        chatRoomUsers {\\n          nextToken\\n        }\\n        messages {\\n          nextToken\\n        }\\n        lastMessageID\\n        lastMessage {\\n          id\\n          createdAt\\n          content\\n          userID\\n          chatRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listMessages = \"\\n  query ListMessages(\\n    $filter: ModelMessageFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        createdAt\\n        content\\n        userID\\n        chatRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        chatRoom {\\n          id\\n          lastMessageID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getEventUser = \"\\n  query GetEventUser($id: ID!) {\\n    getEventUser(id: $id) {\\n      id\\n      userID\\n      eventRoomID\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listEventUsers = \"\\n  query ListEventUsers(\\n    $filter: ModelEventUserFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listEventUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        userID\\n        eventRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        eventRoom {\\n          id\\n          lastEventID\\n          createdAt\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getEventRoom = \"\\n  query GetEventRoom($id: ID!) {\\n    getEventRoom(id: $id) {\\n      id\\n      eventUsers {\\n        items {\\n          id\\n          userID\\n          eventRoomID\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      events {\\n        items {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      lastEventID\\n      lastEvent {\\n        id\\n        userID\\n        title\\n        createdAt\\n        content\\n        eventTime\\n        eventLocation\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        eventRoomID\\n        eventRoom {\\n          id\\n          lastEventID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listEventRooms = \"\\n  query ListEventRooms(\\n    $filter: ModelEventRoomFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listEventRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getEvent = \"\\n  query GetEvent($id: ID!) {\\n    getEvent(id: $id) {\\n      id\\n      userID\\n      title\\n      createdAt\\n      content\\n      eventTime\\n      eventLocation\\n      user {\\n        id\\n        name\\n        imageUri\\n        status\\n        contacts {\\n          nextToken\\n        }\\n        chatRoomUser {\\n          nextToken\\n        }\\n        eventUser {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n        owner\\n      }\\n      eventRoomID\\n      eventRoom {\\n        id\\n        eventUsers {\\n          nextToken\\n        }\\n        events {\\n          nextToken\\n        }\\n        lastEventID\\n        lastEvent {\\n          id\\n          userID\\n          title\\n          createdAt\\n          content\\n          eventTime\\n          eventLocation\\n          eventRoomID\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listEvents = \"\\n  query ListEvents(\\n    $filter: ModelEventFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listEvents(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        userID\\n        title\\n        createdAt\\n        content\\n        eventTime\\n        eventLocation\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        eventRoomID\\n        eventRoom {\\n          id\\n          lastEventID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var messagesByChatRoom = \"\\n  query MessagesByChatRoom(\\n    $chatRoomID: ID\\n    $createdAt: ModelStringKeyConditionInput\\n    $sortDirection: ModelSortDirection\\n    $filter: ModelMessageFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    messagesByChatRoom(\\n      chatRoomID: $chatRoomID\\n      createdAt: $createdAt\\n      sortDirection: $sortDirection\\n      filter: $filter\\n      limit: $limit\\n      nextToken: $nextToken\\n    ) {\\n      items {\\n        id\\n        createdAt\\n        content\\n        userID\\n        chatRoomID\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        chatRoom {\\n          id\\n          lastMessageID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var eventsByEventRoom = \"\\n  query EventsByEventRoom(\\n    $eventRoomID: ID\\n    $eventTime: ModelStringKeyConditionInput\\n    $sortDirection: ModelSortDirection\\n    $filter: ModelEventFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    eventsByEventRoom(\\n      eventRoomID: $eventRoomID\\n      eventTime: $eventTime\\n      sortDirection: $sortDirection\\n      filter: $filter\\n      limit: $limit\\n      nextToken: $nextToken\\n    ) {\\n      items {\\n        id\\n        userID\\n        title\\n        createdAt\\n        content\\n        eventTime\\n        eventLocation\\n        user {\\n          id\\n          name\\n          imageUri\\n          status\\n          createdAt\\n          updatedAt\\n          owner\\n        }\\n        eventRoomID\\n        eventRoom {\\n          id\\n          lastEventID\\n          createdAt\\n          updatedAt\\n        }\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/src/graphql/queries.ts"],"names":["getUser","listUsers","getFriendPair","listFriendPairs","getChatRoomUser","listChatRoomUsers","getChatRoom","listChatRooms","getMessage","listMessages","getEventUser","listEventUsers","getEventRoom","listEventRooms","getEvent","listEvents","messagesByChatRoom","eventsByEventRoom"],"mappings":"AAIA,OAAO,IAAMA,OAAO,wsBAAb;AA4CP,OAAO,IAAMC,SAAS,6fAAf;AA6BP,OAAO,IAAMC,aAAa,6wBAAnB;AAgDP,OAAO,IAAMC,eAAe,oqBAArB;AAqCP,OAAO,IAAMC,eAAe,mzBAArB;AAiDP,OAAO,IAAMC,iBAAiB,mmBAAvB;AAiCP,OAAO,IAAMC,WAAW,44BAAjB;AAsDP,OAAO,IAAMC,aAAa,kkBAAnB;AA+BP,OAAO,IAAMC,UAAU,wzBAAhB;AAkDP,OAAO,IAAMC,YAAY,qmBAAlB;AAkCP,OAAO,IAAMC,YAAY,s2BAAlB;AAoDP,OAAO,IAAMC,cAAc,0lBAApB;AAiCP,OAAO,IAAMC,YAAY,+/BAAlB;AA4DP,OAAO,IAAMC,cAAc,4nBAApB;AAkCP,OAAO,IAAMC,QAAQ,g6BAAd;AAwDP,OAAO,IAAMC,UAAU,wpBAAhB;AAqCP,OAAO,IAAMC,kBAAkB,u1BAAxB;AA4CP,OAAO,IAAMC,iBAAiB,+4BAAvB","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getUser = /* GraphQL */ `\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      name\n      imageUri\n      status\n      contacts {\n        items {\n          id\n          firstUserID\n          secondUserID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      chatRoomUser {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      eventUser {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listUsers = /* GraphQL */ `\n  query ListUsers(\n    $filter: ModelUserFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getFriendPair = /* GraphQL */ `\n  query GetFriendPair($id: ID!) {\n    getFriendPair(id: $id) {\n      id\n      firstUserID\n      secondUserID\n      userOne {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      userTwo {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      status\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listFriendPairs = /* GraphQL */ `\n  query ListFriendPairs(\n    $filter: ModelFriendPairFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listFriendPairs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        firstUserID\n        secondUserID\n        userOne {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        userTwo {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        status\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getChatRoomUser = /* GraphQL */ `\n  query GetChatRoomUser($id: ID!) {\n    getChatRoomUser(id: $id) {\n      id\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listChatRoomUsers = /* GraphQL */ `\n  query ListChatRoomUsers(\n    $filter: ModelChatRoomUserFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listChatRoomUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        userID\n        chatRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        chatRoom {\n          id\n          lastMessageID\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getChatRoom = /* GraphQL */ `\n  query GetChatRoom($id: ID!) {\n    getChatRoom(id: $id) {\n      id\n      chatRoomUsers {\n        items {\n          id\n          userID\n          chatRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      messages {\n        items {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastMessageID\n      lastMessage {\n        id\n        createdAt\n        content\n        userID\n        chatRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        chatRoom {\n          id\n          lastMessageID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listChatRooms = /* GraphQL */ `\n  query ListChatRooms(\n    $filter: ModelChatRoomFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listChatRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getMessage = /* GraphQL */ `\n  query GetMessage($id: ID!) {\n    getMessage(id: $id) {\n      id\n      createdAt\n      content\n      userID\n      chatRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      chatRoom {\n        id\n        chatRoomUsers {\n          nextToken\n        }\n        messages {\n          nextToken\n        }\n        lastMessageID\n        lastMessage {\n          id\n          createdAt\n          content\n          userID\n          chatRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\nexport const listMessages = /* GraphQL */ `\n  query ListMessages(\n    $filter: ModelMessageFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        createdAt\n        content\n        userID\n        chatRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        chatRoom {\n          id\n          lastMessageID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getEventUser = /* GraphQL */ `\n  query GetEventUser($id: ID!) {\n    getEventUser(id: $id) {\n      id\n      userID\n      eventRoomID\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listEventUsers = /* GraphQL */ `\n  query ListEventUsers(\n    $filter: ModelEventUserFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listEventUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        userID\n        eventRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        eventRoom {\n          id\n          lastEventID\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getEventRoom = /* GraphQL */ `\n  query GetEventRoom($id: ID!) {\n    getEventRoom(id: $id) {\n      id\n      eventUsers {\n        items {\n          id\n          userID\n          eventRoomID\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      events {\n        items {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        nextToken\n      }\n      lastEventID\n      lastEvent {\n        id\n        userID\n        title\n        createdAt\n        content\n        eventTime\n        eventLocation\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        eventRoomID\n        eventRoom {\n          id\n          lastEventID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listEventRooms = /* GraphQL */ `\n  query ListEventRooms(\n    $filter: ModelEventRoomFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listEventRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getEvent = /* GraphQL */ `\n  query GetEvent($id: ID!) {\n    getEvent(id: $id) {\n      id\n      userID\n      title\n      createdAt\n      content\n      eventTime\n      eventLocation\n      user {\n        id\n        name\n        imageUri\n        status\n        contacts {\n          nextToken\n        }\n        chatRoomUser {\n          nextToken\n        }\n        eventUser {\n          nextToken\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      eventRoomID\n      eventRoom {\n        id\n        eventUsers {\n          nextToken\n        }\n        events {\n          nextToken\n        }\n        lastEventID\n        lastEvent {\n          id\n          userID\n          title\n          createdAt\n          content\n          eventTime\n          eventLocation\n          eventRoomID\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      updatedAt\n    }\n  }\n`;\nexport const listEvents = /* GraphQL */ `\n  query ListEvents(\n    $filter: ModelEventFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listEvents(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        userID\n        title\n        createdAt\n        content\n        eventTime\n        eventLocation\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        eventRoomID\n        eventRoom {\n          id\n          lastEventID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const messagesByChatRoom = /* GraphQL */ `\n  query MessagesByChatRoom(\n    $chatRoomID: ID\n    $createdAt: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelMessageFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    messagesByChatRoom(\n      chatRoomID: $chatRoomID\n      createdAt: $createdAt\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        createdAt\n        content\n        userID\n        chatRoomID\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        chatRoom {\n          id\n          lastMessageID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const eventsByEventRoom = /* GraphQL */ `\n  query EventsByEventRoom(\n    $eventRoomID: ID\n    $eventTime: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelEventFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    eventsByEventRoom(\n      eventRoomID: $eventRoomID\n      eventTime: $eventTime\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        userID\n        title\n        createdAt\n        content\n        eventTime\n        eventLocation\n        user {\n          id\n          name\n          imageUri\n          status\n          createdAt\n          updatedAt\n          owner\n        }\n        eventRoomID\n        eventRoom {\n          id\n          lastEventID\n          createdAt\n          updatedAt\n        }\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}