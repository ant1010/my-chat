{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport styles from \"./styles\";\nimport { API, Auth, graphqlOperation } from \"aws-amplify\";\nimport { createEvents } from \"../../src/graphql/mutations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EventInput = function EventInput() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myUserId = _useState4[0],\n      setMyUserId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nextSelectedInvite = _useState6[0],\n      setNextSelectedInvite = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inviteList = _useState8[0],\n      setInviteList = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filterFriendList = _useState10[0],\n      setFilterFriendList = _useState10[1];\n\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userInfo = _context.sent;\n              setMyUserId(userInfo.attributes.sub);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUser();\n  }, []);\n\n  var onMicrophonePress = function onMicrophonePress() {\n    console.warn('Microphone');\n  };\n\n  var onSendPress = function onSendPress() {\n    var newEventData;\n    return _regeneratorRuntime.async(function onSendPress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createEvents, {\n              input: {\n                content: description,\n                userID: myUserId,\n                chatRoomID: chatRoomID\n              }\n            })));\n\n          case 3:\n            newEventData = _context2.sent;\n            console.log(newEventData);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var onPress = function onPress() {\n    onSendPress();\n  };\n\n  var filterFriend = function filterFriend() {\n    setFilterFriendList([]);\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: 100,\n    style: {\n      width: '100%'\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"Type a message\",\n          style: styles.textInput,\n          multiline: true,\n          value: description,\n          onChangeText: setDescription\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(SearchableDropdown, {\n          multi: true,\n          selectedItems: inviteList,\n          onItemSelect: function onItemSelect(item) {\n            var items = inviteList;\n            items.push(item);\n            setInviteList(_toConsumableArray(items));\n          },\n          containerStyle: {\n            padding: 5\n          },\n          onRemoveItem: function onRemoveItem(item, index) {\n            var items = filterFriendList.filter(function (sitem) {\n              return sitem.id !== item.id;\n            });\n            setInviteList(_toConsumableArray(items));\n          },\n          itemStyle: {\n            padding: 10,\n            marginTop: 2,\n            backgroundColor: '#ddd',\n            borderColor: '#bbb',\n            borderWidth: 1,\n            borderRadius: 5\n          },\n          itemTextStyle: {\n            color: '#222'\n          },\n          itemsContainerStyle: {\n            maxHeight: 140\n          },\n          items: filterFriendList,\n          defaultIndex: 2,\n          chip: true,\n          resetValue: false,\n          textInputProps: {\n            placeholder: \"placeholder\",\n            underlineColorAndroid: \"transparent\",\n            style: {\n              padding: 12,\n              borderWidth: 1,\n              borderColor: '#ccc',\n              borderRadius: 5\n            },\n            onTextChange: function onTextChange(text) {\n              return filterFriend(text);\n            }\n          },\n          listProps: {\n            nestedScrollEnabled: true\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default EventInput;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/EventInput/index.tsx"],"names":["React","useState","useEffect","SearchableDropdown","styles","API","Auth","graphqlOperation","createEvents","EventInput","description","setDescription","myUserId","setMyUserId","nextSelectedInvite","setNextSelectedInvite","inviteList","setInviteList","filterFriendList","setFilterFriendList","fetchUser","currentAuthenticatedUser","userInfo","attributes","sub","onMicrophonePress","console","warn","onSendPress","graphql","input","content","userID","chatRoomID","newEventData","log","onPress","filterFriend","Platform","OS","width","container","mainContainer","textInput","item","items","push","padding","index","filter","sitem","id","marginTop","backgroundColor","borderColor","borderWidth","borderRadius","color","maxHeight","placeholder","underlineColorAndroid","style","onTextChange","text","nestedScrollEnabled"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport {View, Text, TextInput, KeyboardAvoidingView,TouchableOpacity,Platform,VariantsBox} from \"react-native\";\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport styles from './styles';\nimport{API,Auth,graphqlOperation,} from \"aws-amplify\";\nimport {createEvents,updateChatRoom} from \"../../src/graphql/mutations\";\nimport {\n  MaterialCommunityIcons,\n  MaterialIcons,\n  FontAwesome5,\n  Entypo,\n  Fontisto,\n} from '@expo/vector-icons';\n\nconst EventInput = () => {\n\n  //const {chatRoomID} = props;\n  const [description, setDescription] = useState('');\n  const [myUserId, setMyUserId] = useState('');\n  const [nextSelectedInvite,setNextSelectedInvite] = useState('');\n  const [inviteList,setInviteList] = useState([]);\n  const [filterFriendList, setFilterFriendList] = useState([]);\n    useEffect(() => {\n      const fetchUser = async () => {\n        const userInfo = await Auth.currentAuthenticatedUser();\n\n        setMyUserId(userInfo.attributes.sub);\n      }\n      fetchUser();\n    },[])\n  const onMicrophonePress = () => {\n    console.warn('Microphone')\n  }\n  const onSendPress = async () => {\n  \n    // send the message to the backend\n    try{\n     const newEventData =  await API.graphql(graphqlOperation(createEvents,{input:{content:description,userID:myUserId,chatRoomID}}))\n     console.log(newEventData);\n     \n    }catch(e){\n      console.log(e);\n    }\n\n   \n  }\n  \n  const onPress = () => {\n        onSendPress();\n  }\n  const filterFriend = () => {\n      setFilterFriendList([]);\n  }\n \n  \n\n  return (\n    <KeyboardAvoidingView behavior={Platform.OS == \"ios\"?\"padding\":\"height\"}\n    keyboardVerticalOffset ={100}style={{width:'100%'}}>\n    <View style={styles.container}>\n      <View style={styles.mainContainer}>\n     \n        <TextInput\n          placeholder={\"Type a message\"}\n          style={styles.textInput}\n          multiline\n          value={description}\n          onChangeText={setDescription}\n        />\n         \n      </View>\n      <View style={styles.mainContainer}>\n     \n     \n      <SearchableDropdown\n            multi={true}\n            selectedItems={inviteList}\n            onItemSelect={(item) => {\n              const items =inviteList;\n              items.push(item)\n              setInviteList([...items]);\n            }}\n            containerStyle={{ padding: 5 }}\n            onRemoveItem={(item, index) => {\n              const items = filterFriendList.filter((sitem) => sitem.id !== item.id);\n              setInviteList([...items]);\n            }}\n            itemStyle={{\n              padding: 10,\n              marginTop: 2,\n              backgroundColor: '#ddd',\n              borderColor: '#bbb',\n              borderWidth: 1,\n              borderRadius: 5,\n            }}\n            itemTextStyle={{ color: '#222' }}\n            itemsContainerStyle={{ maxHeight: 140 }}\n            items={filterFriendList}\n            defaultIndex={2}\n            chip={true}\n            resetValue={false}\n            textInputProps={\n              {\n                placeholder: \"placeholder\",\n                underlineColorAndroid: \"transparent\",\n                style: {\n                    padding: 12,\n                    borderWidth: 1,\n                    borderColor: '#ccc',\n                    borderRadius: 5,\n                },\n                onTextChange: text => filterFriend(text)\n              }\n            }\n            listProps={\n              {\n                nestedScrollEnabled: true,\n              }\n            }\n          />\n   </View>\n  \n     \n    </View>\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default EventInput;"]},"metadata":{},"sourceType":"module"}