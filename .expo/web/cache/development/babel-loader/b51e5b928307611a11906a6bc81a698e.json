{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport React, { useEffect } from 'react';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Amplify, { Auth, API, graphqlOperation } from 'aws-amplify';\nimport awsconfig from \"./src/aws-exports\";\nimport { getUser } from \"./src/graphql/queries\";\nimport { createUser } from \"./src/graphql/mutations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nAmplify.configure(awsconfig);\nvar randomImages = ['https://hieumobile.com/wp-content/uploads/avatar-among-us-2.jpg', 'https://hieumobile.com/wp-content/uploads/avatar-among-us-3.jpg', 'https://hieumobile.com/wp-content/uploads/avatar-among-us-6.jpg', 'https://hieumobile.com/wp-content/uploads/avatar-among-us-9.jpg'];\n\nvar getRandomImage = function getRandomImage() {\n  return randomImages[Math.floor(Math.random() * randomImages.length)];\n};\n\nfunction App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo, userData, newUser;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser({\n                bypassCache: true\n              }));\n\n            case 2:\n              userInfo = _context.sent;\n\n              if (!userInfo) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 6:\n              userData = _context.sent;\n\n              if (!userData.data.getUser) {\n                _context.next = 10;\n                break;\n              }\n\n              console.log(\"user already in database\");\n              return _context.abrupt(\"return\");\n\n            case 10:\n              newUser = {\n                id: userInfo.attributes,\n                name: userInfo.username,\n                imageUri: getRandomImage(),\n                status: 'Hey, iam using '\n              };\n              console.log(newUser);\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createUser, {\n                input: newUser\n              })));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUser();\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsxs(SafeAreaProvider, {\n      children: [_jsx(Navigation, {\n        colorScheme: colorScheme\n      }), _jsx(StatusBar, {})]\n    });\n  }\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/App.tsx"],"names":["StatusBar","SafeAreaProvider","React","useEffect","useCachedResources","useColorScheme","Navigation","withAuthenticator","Amplify","Auth","API","graphqlOperation","awsconfig","getUser","createUser","configure","randomImages","getRandomImage","Math","floor","random","length","App","isLoadingComplete","colorScheme","fetchUser","currentAuthenticatedUser","bypassCache","userInfo","graphql","id","attributes","sub","userData","data","console","log","newUser","name","username","imageUri","status","input"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AAEA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,OAAP,IAAkBC,IAAlB,EAAuBC,GAAvB,EAA2BC,gBAA3B,QAAmD,aAAnD;AACA,OAAOC,SAAP;AACA,SAAQC,OAAR;AACA,SAAQC,UAAR;;;AACAN,OAAO,CAACO,SAAR,CAAkBH,SAAlB;AAGA,IAAMI,YAAY,GAAG,CACnB,iEADmB,EAEnB,iEAFmB,EAGnB,iEAHmB,EAInB,iEAJmB,CAArB;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SAAOD,YAAY,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,YAAY,CAACK,MAAxC,CAAD,CAAnB;AACD,CAFD;;AAGC,SAASC,GAAT,GAAe;AACd,MAAMC,iBAAiB,GAAGnB,kBAAkB,EAA5C;AACA,MAAMoB,WAAW,GAAGnB,cAAc,EAAlC;AAEAF,EAAAA,SAAS,CAAE,YAAM;AACf,QAAMsB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEOhB,IAAI,CAACiB,wBAAL,CAA8B;AAACC,gBAAAA,WAAW,EAAC;AAAb,eAA9B,CAFP;;AAAA;AAEVC,cAAAA,QAFU;;AAAA,mBAKbA,QALa;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAMSlB,GAAG,CAACmB,OAAJ,CACrBlB,gBAAgB,CACdE,OADc,EAEd;AAACiB,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UAAT,CAAoBC;AAAzB,eAFc,CADK,CANT;;AAAA;AAMRC,cAAAA,QANQ;;AAAA,mBAYXA,QAAQ,CAACC,IAAT,CAAcrB,OAZH;AAAA;AAAA;AAAA;;AAaVsB,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAbU;;AAAA;AAgBRC,cAAAA,OAhBQ,GAgBE;AACdP,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UADC;AAEdO,gBAAAA,IAAI,EAAEV,QAAQ,CAACW,QAFD;AAGdC,gBAAAA,QAAQ,EAAEvB,cAAc,EAHV;AAIdwB,gBAAAA,MAAM,EAAE;AAJM,eAhBF;AAsBdN,cAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAtBc;AAAA,+CAuBR3B,GAAG,CAACmB,OAAJ,CAAYlB,gBAAgB,CAACG,UAAD,EAAY;AAAC4B,gBAAAA,KAAK,EAACL;AAAP,eAAZ,CAA5B,CAvBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AA0BAZ,IAAAA,SAAS;AACV,GA5BQ,EA4BP,EA5BO,CAAT;;AA8BA,MAAI,CAACF,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,MAAC,gBAAD;AAAA,iBACE,KAAC,UAAD;AAAY,QAAA,WAAW,EAAEC;AAAzB,QADF,EAEE,KAAC,SAAD,KAFF;AAAA,MADF;AAMD;AACF;;AACD,eAAejB,iBAAiB,CAACe,GAAD,CAAhC","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport React,{useEffect} from 'react';\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n// @ts-ignore\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Amplify, { Auth,API,graphqlOperation } from 'aws-amplify'\nimport awsconfig from './src/aws-exports'\nimport {getUser} from './src/graphql/queries';\nimport {createUser} from './src/graphql/mutations';\nAmplify.configure(awsconfig)\n\n\nconst randomImages = [\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-2.jpg',\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-3.jpg',\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-6.jpg',\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-9.jpg',\n]\n\nconst getRandomImage = () => {\n  return randomImages[Math.floor(Math.random() * randomImages.length)];\n}\n function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n//@ts-ignore\n  useEffect( () => {\n    const fetchUser = async () => {\n      // get auth user\n      const userInfo = await Auth.currentAuthenticatedUser({bypassCache:true});\n      \n\n      if(userInfo){\n        const userData = await API.graphql(\n          graphqlOperation(\n            getUser,\n            {id: userInfo.attributes.sub}\n          )\n        )\n        if(userData.data.getUser){\n            console.log(\"user already in database\");\n            return;\n        }\n        const newUser = {\n          id: userInfo.attributes,\n          name: userInfo.username,\n          imageUri: getRandomImage(), \n          status: 'Hey, iam using ',\n        }\n        console.log(newUser);\n        await API.graphql(graphqlOperation(createUser,{input:newUser}))\n      }\n    }\n    fetchUser();\n  },[])\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\nexport default withAuthenticator(App)"]},"metadata":{},"sourceType":"module"}