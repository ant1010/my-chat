{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { View } from \"../components/Themed\";\nimport ChatListItem from \"../components/ChatListItem\";\nimport { useEffect, useState } from \"react\";\nimport NewMessageButton from \"../components/NewMessageButton\";\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { getUser } from \"./queries\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatsScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatRooms = _useState2[0],\n      setChatRooms = _useState2[1];\n\n  useEffect(function () {\n    var fetchChatRooms = function fetchChatRooms() {\n      var userInfo, userData;\n      return _regeneratorRuntime.async(function fetchChatRooms$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 3:\n              userInfo = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 6:\n              userData = _context.sent;\n              setChatRooms(userData.data.getUser.chatRoomUser.items);\n              console.log(userData.data.getUser.chatRoomUser.items);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    fetchChatRooms();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      style: {\n        width: '100%'\n      },\n      data: chatRooms,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ChatListItem, {\n          chatRoom: item.chatr\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(NewMessageButton, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/ChatsScreen.tsx"],"names":["React","View","ChatListItem","useEffect","useState","NewMessageButton","API","graphqlOperation","Auth","getUser","ChatsScreen","chatRooms","setChatRooms","fetchChatRooms","currentAuthenticatedUser","userInfo","graphql","id","attributes","sub","userData","data","chatRoomUser","items","console","log","styles","container","width","item","chatr","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,IAAT;AACA,OAAOC,YAAP;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AAEA,OAAOC,gBAAP;AACA,SACIC,GADJ,EAEIC,gBAFJ,EAGIC,IAHJ,QAKM,aALN;AAMA,SAAQC,OAAR;;;AAGA,eAAe,SAASC,WAAT,GAAuB;AAClC,kBAAiCN,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAiBC,YAAjB;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAESL,IAAI,CAACM,wBAAL,EAFT;;AAAA;AAERC,cAAAA,QAFQ;AAAA;AAAA,+CAIST,GAAG,CAACU,OAAJ,CACnBT,gBAAgB,CACZE,OADY,EACH;AACLQ,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UAAT,CAAoBC;AADnB,eADG,CADG,CAJT;;AAAA;AAIRC,cAAAA,QAJQ;AAWdR,cAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAT,CAAcZ,OAAd,CAAsBa,YAAtB,CAAmCC,KAApC,CAAZ;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAAT,CAAcZ,OAAd,CAAsBa,YAAtB,CAAmCC,KAA/C;AAZc;AAAA;;AAAA;AAAA;AAAA;AAcdC,cAAAA,OAAO,CAACC,GAAR;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAiBAZ,IAAAA,cAAc;AAChB,GAnBO,EAmBL,EAnBK,CAAT;AAoBF,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OADT;AAEE,MAAA,IAAI,EAAEjB,SAFR;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGkB,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,YAAD;AAAc,UAAA,QAAQ,EAAEA,IAAI,CAACC;AAA7B,UAAd;AAAA,OAHd;AAIE,MAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,eAAUA,IAAI,CAACZ,EAAf;AAAA;AAJhB,MADF,EAOE,KAAC,gBAAD,KAPF;AAAA,IADF;AAWD;AAED,IAAMS,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {FlatList, StyleSheet} from 'react-native';\nimport { View } from '../components/Themed';\nimport ChatListItem from '../components/ChatListItem';\nimport {useEffect,useState} from \"react\";\nimport chatRooms from '../data/ChatRooms';\nimport NewMessageButton from \"../components/NewMessageButton\";\nimport {\n    API,\n    graphqlOperation,\n    Auth,\n\n}from 'aws-amplify';\nimport {getUser} from './queries';\n\n\nexport default function ChatsScreen() {\n    const [chatRooms,setChatRooms] = useState([]);\n    useEffect(() => {\n        const fetchChatRooms = async () => {\n             try{\n                 const userInfo = await Auth.currentAuthenticatedUser();\n                 \n                 const userData = await API.graphql(\n                     graphqlOperation(\n                         getUser, {\n                             id: userInfo.attributes.sub,\n                         }\n                     )\n                 )\n                 setChatRooms(userData.data.getUser.chatRoomUser.items);\n                 console.log(userData.data.getUser.chatRoomUser.items);\n             }catch(e){\n                 console.log(e);\n             }\n        }\n        fetchChatRooms();\n     }, [])\n  return (\n    <View style={styles.container}>\n      <FlatList\n        style={{width: '100%'}}\n        data={chatRooms}\n        renderItem={({ item }) => <ChatListItem chatRoom={item.chatr} />}\n        keyExtractor={(item) => item.id}\n      />\n      <NewMessageButton />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n});"]},"metadata":{},"sourceType":"module"}