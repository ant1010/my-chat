{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { listUsers } from \"./queries\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SearchScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userList = _useState4[0],\n      setUserList = _useState4[1];\n\n  var setQueryStt = function setQueryStt(e) {\n    setQuery(e);\n  };\n\n  useEffect(function () {\n    if (!query) {\n      return setQuery(\"\");\n    }\n\n    fetchUserList();\n  }, [query]);\n\n  var fetchUserList = function fetchUserList() {\n    var list;\n    return _regeneratorRuntime.async(function fetchUserList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listUsers, {\n              filter: {\n                name: {\n                  beginsWith: query\n                }\n              }\n            })));\n\n          case 3:\n            list = _context.sent;\n            console.log(list.data.listUsers.items);\n            setUserList(list.data.listUsers.items);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.textBox,\n      children: _jsx(TextInput, {\n        \"data-name\": \"content\",\n        placeholder: \"Search...\",\n        placeholderTextColor: \"#757373\",\n        style: styles.textInput,\n        multiline: true,\n        value: query,\n        onChangeText: function onChangeText(e) {\n          return setQueryStt(e);\n        }\n      })\n    }), _jsx(Text, {\n      style: styles.textInput,\n      children: query\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    color: \"white\"\n  },\n  textBox: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 25,\n    borderWidth: 3,\n    borderColor: 'white',\n    marginRight: 10,\n    color: \"white\"\n  },\n  textInput: {\n    color: \"white\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/screens/SearchScreen.tsx"],"names":["React","useState","useEffect","listUsers","API","graphqlOperation","SearchScreen","query","setQuery","userList","setUserList","setQueryStt","e","fetchUserList","graphql","filter","name","beginsWith","list","console","log","data","items","styles","container","textBox","textInput","StyleSheet","create","color","backgroundColor","padding","borderRadius","borderWidth","borderColor","marginRight","fontSize","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;;;;;AAEA,SAAQC,SAAR;AACA,SAAQC,GAAR,EAAYC,gBAAZ,QAAwC,aAAxC;;;AACA,eAAe,SAASC,YAAT,GAAwB;AACnC,kBAAyBL,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAaC,QAAb;;AACA,mBAA+BP,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAgBC,WAAhB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACxBJ,IAAAA,QAAQ,CAACI,CAAD,CAAR;AACF,GAFD;;AAGAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACK,KAAJ,EAAU;AAAC,aAAOC,QAAQ,CAAC,EAAD,CAAf;AAAoB;;AAC/BK,IAAAA,aAAa;AAChB,GAHQ,EAGP,CAACN,KAAD,CAHO,CAAT;;AAIA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKT,GAAG,CAACU,OAAJ,CACfT,gBAAgB,CACdF,SADc,EACH;AACTY,cAAAA,MAAM,EAAE;AAACC,gBAAAA,IAAI,EAAE;AAACC,kBAAAA,UAAU,EAAEV;AAAb;AAAP;AADC,aADG,CADD,CAFL;;AAAA;AAERW,YAAAA,IAFQ;AAQVC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUlB,SAAV,CAAoBmB,KAAhC;AACAZ,YAAAA,WAAW,CAACQ,IAAI,CAACG,IAAL,CAAUlB,SAAV,CAAoBmB,KAArB,CAAX;AATU;AAAA;;AAAA;AAAA;AAAA;AAWdH,YAAAA,OAAO,CAACC,GAAR;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAcA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA,gBAEI,KAAC,SAAD;AACI,qBAAU,SADd;AAEI,QAAA,WAAW,EAAE,WAFjB;AAGI,QAAA,oBAAoB,EAAC,SAHzB;AAII,QAAA,KAAK,EAAEF,MAAM,CAACG,SAJlB;AAKI,QAAA,SAAS,MALb;AAMI,QAAA,KAAK,EAAEnB,KANX;AAOI,QAAA,YAAY,EAAE,sBAAAK,CAAC;AAAA,iBAAID,WAAW,CAACC,CAAD,CAAf;AAAA;AAPnB;AAFJ,MADJ,EAcI,KAAC,IAAD;AAAO,MAAA,KAAK,EAAEW,MAAM,CAACG,SAArB;AAAA,gBAAiCnB;AAAjC,MAdJ;AAAA,IADJ;AAkBH;AACD,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AAETK,IAAAA,KAAK,EAAC;AAFG,GADkB;AAK7BJ,EAAAA,OAAO,EAAE;AAGLK,IAAAA,eAAe,EAAE,OAHZ;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,YAAY,EAAE,EALT;AAMLC,IAAAA,WAAW,EAAC,CANP;AAOLC,IAAAA,WAAW,EAAC,OAPP;AAQLC,IAAAA,WAAW,EAAE,EARR;AASLN,IAAAA,KAAK,EAAC;AATD,GALoB;AAgB7BH,EAAAA,SAAS,EAAE;AACPG,IAAAA,KAAK,EAAC,OADC;AAEPO,IAAAA,QAAQ,EAAC,EAFF;AAGPC,IAAAA,UAAU,EAAC;AAHJ;AAhBkB,CAAlB,CAAf","sourcesContent":["import React ,{useState,useEffect} from 'react'\nimport {FlatList, StyleSheet,View,TextInput,Text} from 'react-native';\nimport {listUsers} from './queries';\nimport {API,graphqlOperation,Auth} from 'aws-amplify';\nexport default function SearchScreen() {\n    const [query,setQuery] = useState(\"\");\n    const [userList,setUserList] = useState([]);\n    const setQueryStt = (e) => {\n       setQuery(e);\n    }\n    useEffect(() => {\n        if(!query){return setQuery(\"\")}\n        fetchUserList();\n    },[query])\n    const fetchUserList = async () =>{\n        try{\n            const list = await API.graphql(\n                graphqlOperation(\n                  listUsers, {\n                    filter: {name: {beginsWith: query}}\n                  \n                }));\n                console.log(list.data.listUsers.items);\n                setUserList(list.data.listUsers.items);\n        }catch(e){\n            console.log(e);\n        }\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.textBox}>\n\n                <TextInput\n                    data-name='content'\n                    placeholder={\"Search...\"}\n                    placeholderTextColor=\"#757373\" \n                    style={styles.textInput}\n                    multiline\n                    value={query}\n                    onChangeText={e => setQueryStt(e)}\n                />\n\n            </View>\n            <Text  style={styles.textInput}>{query}</Text>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n      \n      color:\"white\",\n    },\n    textBox: {\n        \n       \n        backgroundColor: 'black',\n        padding: 10,\n        borderRadius: 25,\n        borderWidth:3,\n        borderColor:'white',\n        marginRight: 10,\n        color:\"white\",\n    },\n    textInput: {\n        color:\"white\",\n        fontSize:30,\n        fontWeight:\"bold\",\n        \n    }\n\n  });"]},"metadata":{},"sourceType":"module"}