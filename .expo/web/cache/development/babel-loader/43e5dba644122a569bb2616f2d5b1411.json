{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./styles\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { listUsers } from \"../../src/graphql/queries\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { FontAwesome, EvilIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EventInput = function EventInput(_ref) {\n  var postEvent = _ref.postEvent;\n  var initialForm = {\n    title: '',\n    content: '',\n    location: '',\n    invites: [],\n    date: new Date(Date.now())\n  };\n\n  var _useState = useState(initialForm),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextSelectedInvite = _useState4[0],\n      setNextSelectedInvite = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterFriendList = _useState6[0],\n      setFilterFriendList = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      users = _useState8[0],\n      setUsers = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, _defineProperty({}, 'date', currentDate)));\n  };\n\n  useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      var userData;\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listUsers)));\n\n            case 3:\n              userData = _context.sent;\n              console.log(userData);\n              setUsers(userData.data.listUsers.items);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    fetchUsers();\n  }, []);\n  useEffect(function () {\n    setFilterFriendList([]);\n\n    if (nextSelectedInvite == \"\") {\n      return;\n    }\n\n    var list = [];\n    users.forEach(function (element) {\n      if (element.name.toLowerCase().includes(nextSelectedInvite.toLowerCase())) list.push(element);\n    });\n    setFilterFriendList(list);\n    console.log(filterFriendList);\n  }, [nextSelectedInvite]);\n\n  var updateFormValue = function updateFormValue(event, name) {\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, _defineProperty({}, name, event)));\n  };\n\n  var onClick = function onClick(name) {\n    return function () {\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        invites: [].concat(_toConsumableArray(formValues.invites), [name])\n      }));\n      setUsers(users.filter(function (item) {\n        return item !== name;\n      }));\n      setNextSelectedInvite(\"\");\n    };\n  };\n\n  var removeName = function removeName(name) {\n    return function () {\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        invites: formValues.invites.filter(function (item) {\n          return item !== name;\n        })\n      }));\n      setUsers(function (users) {\n        return [].concat(_toConsumableArray(users), [name]);\n      });\n    };\n  };\n\n  var setEvent = function setEvent() {\n    console.log(formValues);\n    setFormValues(initialForm);\n    postEvent(formValues);\n  };\n\n  var SearchListNameCard = function SearchListNameCard(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableWithoutFeedback, {\n      children: _jsxs(View, {\n        style: styles.nameCardContainer,\n        children: [_jsx(EvilIcons, {\n          name: \"search\",\n          size: 24,\n          color: \"black\"\n        }), _jsx(Image, {\n          source: {\n            uri: item.imageUri\n          },\n          style: styles.avatar\n        }), _jsx(Text, {\n          onPress: onClick(item),\n          style: styles.nameCardText,\n          children: item.name\n        })]\n      })\n    });\n  };\n\n  var SelectedNameCard = function SelectedNameCard(_ref3) {\n    var item = _ref3.item;\n    return _jsx(TouchableWithoutFeedback, {\n      children: _jsx(View, {\n        style: styles.selectedUsers,\n        children: _jsxs(View, {\n          style: styles.lefContainer,\n          children: [_jsx(Image, {\n            source: {\n              uri: item.imageUri\n            },\n            style: styles.avatar\n          }), _jsx(View, {\n            style: styles.midContainer,\n            children: _jsx(Text, {\n              style: styles.username,\n              children: item.name\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              flex: 1\n            },\n            onPress: removeName(item),\n            children: _jsx(FontAwesome, {\n              name: \"remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: 100,\n    style: {\n      width: '100%'\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          \"data-name\": \"title\",\n          placeholder: \"Title\",\n          style: styles.textInput,\n          value: formValues.title,\n          onChangeText: function onChangeText(e) {\n            return updateFormValue(e, 'title');\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.textLabel,\n        children: \"When?\"\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(DateTimePicker, {\n          testID: \"dateTimePicker\",\n          value: formValues.date,\n          mode: 'datetime',\n          is24Hour: true,\n          onChange: onChange\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          \"data-name\": \"location\",\n          placeholder: \"Where?\",\n          style: styles.textInput,\n          value: formValues.location,\n          onChangeText: function onChangeText(e) {\n            return updateFormValue(e, 'location');\n          }\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          \"data-name\": \"content\",\n          placeholder: \"What?\",\n          style: styles.textInput,\n          multiline: true,\n          value: formValues.content,\n          onChangeText: function onChangeText(e) {\n            return updateFormValue(e, 'content');\n          }\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"Who?\",\n          style: styles.textInput,\n          value: nextSelectedInvite,\n          onChangeText: setNextSelectedInvite\n        })\n      }), _jsx(View, {\n        style: styles.searchContainer,\n        children: _jsx(FlatList, {\n          data: filterFriendList,\n          renderItem: function renderItem(_ref4) {\n            var item = _ref4.item;\n            return _jsx(SearchListNameCard, {\n              item: item\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })\n      }), _jsx(Button, {\n        onPress: setEvent,\n        title: \"Post Event\",\n        color: \"#841584\",\n        accessibilityLabel: \"Post New Event\"\n      }), _jsx(Text, {\n        style: styles.textLabel,\n        children: \"Invites:\"\n      }), _jsx(FlatList, {\n        data: formValues.invites,\n        style: {\n          width: '100%'\n        },\n        renderItem: function renderItem(_ref5) {\n          var item = _ref5.item;\n          return _jsx(SelectedNameCard, {\n            item: item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        numColumns: 2\n      })]\n    })\n  });\n};\n\nexport default EventInput;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/EventInput/index.tsx"],"names":["React","useState","useEffect","styles","API","graphqlOperation","listUsers","DateTimePicker","FontAwesome","EvilIcons","EventInput","postEvent","initialForm","title","content","location","invites","date","Date","now","formValues","setFormValues","nextSelectedInvite","setNextSelectedInvite","filterFriendList","setFilterFriendList","users","setUsers","onChange","event","selectedDate","currentDate","fetchUsers","graphql","userData","console","log","data","items","list","forEach","element","name","toLowerCase","includes","push","updateFormValue","onClick","filter","item","removeName","setEvent","SearchListNameCard","nameCardContainer","uri","imageUri","avatar","nameCardText","SelectedNameCard","selectedUsers","lefContainer","midContainer","username","flex","Platform","OS","width","container","mainContainer","textInput","e","textLabel","searchContainer","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\n// @ts-ignore\nimport { View, FlatList, Image, Text, TextInput, TouchableWithoutFeedback, TouchableOpacity, KeyboardAvoidingView, Platform, StyleSheet, Button } from \"react-native\";\nimport styles from './styles';\nimport { API, Auth, graphqlOperation, } from \"aws-amplify\";\nimport { createEvents, updateChatRoom } from \"../../src/graphql/mutations\";\nimport { listUsers } from '../../src/graphql/queries';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport {\n    MaterialCommunityIcons,\n    MaterialIcons,\n    FontAwesome,\n    Entypo,\n    Fontisto,\n    EvilIcons,\n} from '@expo/vector-icons';\n\nconst EventInput = ({ postEvent }) => {\n    const initialForm = {\n        title: '',\n        content: '',\n        location: '',\n        invites: [],\n        date: new Date(Date.now())\n    };\n    //const {chatRoomID} = props;\n    const [formValues, setFormValues] = useState(initialForm)\n    const [nextSelectedInvite, setNextSelectedInvite] = useState('');\n    const [filterFriendList, setFilterFriendList] = useState([]);\n    const [users, setUsers] = useState([]);\n\n\n\n    const onChange = (event, selectedDate) => {\n        const currentDate = selectedDate;\n        setFormValues({ ...formValues, ['date']: currentDate })\n    };\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const userData = await API.graphql(graphqlOperation(listUsers));\n                console.log(userData);\n                setUsers(userData.data.listUsers.items);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        fetchUsers();\n    }, [])\n    useEffect(() => {\n        setFilterFriendList([]);\n        if (nextSelectedInvite == \"\") { return; }\n\n        let list = [];\n        users.forEach((element) => {\n            if (element.name.toLowerCase().includes(nextSelectedInvite.toLowerCase()))\n                list.push(element);\n        });\n        setFilterFriendList(list);\n\n        console.log(filterFriendList)\n\n    }, [nextSelectedInvite])\n\n\n    const updateFormValue = (event, name) => {\n        //const {name} =event.target.dataset;\n        setFormValues({ ...formValues, [name]: event });\n\n    }\n\n    //adds user to invite list\n    const onClick = (name) => () => {\n\n        setFormValues({ ...formValues, invites: [...formValues.invites, name] })\n        setUsers(users.filter(item => item !== name))\n        setNextSelectedInvite(\"\");\n    }\n\n    const removeName = (name) => () => {\n\n        setFormValues({ ...formValues, invites: formValues.invites.filter(item => item !== name) })\n        setUsers(users => [...users, name])\n    }\n    const setEvent = () => {\n        console.log(formValues);\n        setFormValues(initialForm);\n        postEvent(formValues);\n    }\n    const SearchListNameCard = ({ item }) => (\n        <TouchableWithoutFeedback >\n            <View style={styles.nameCardContainer}>\n                <EvilIcons name=\"search\" size={24} color=\"black\" />\n                <Image source={{ uri: item.imageUri }} style={styles.avatar} />\n                <Text onPress={onClick(item)} style={styles.nameCardText} >{item.name}</Text>\n            </View>\n        </TouchableWithoutFeedback>\n    );\n    const SelectedNameCard = ({ item }) => (\n        <TouchableWithoutFeedback >\n            <View style={styles.selectedUsers}>\n                <View style={styles.lefContainer}>\n                    <Image source={{ uri: item.imageUri }} style={styles.avatar} />\n                    <View style={styles.midContainer}>\n                        <Text style={styles.username}>{item.name}</Text>\n                    </View>\n                    <TouchableOpacity style={{ flex: 1 }} onPress={removeName(item)}>\n                        <FontAwesome name=\"remove\" size={24} color=\"white\" />\n                    </TouchableOpacity>\n                </View>\n\n            </View>\n\n\n        </TouchableWithoutFeedback>\n    );\n    return (\n        <KeyboardAvoidingView behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n            keyboardVerticalOffset={100} style={{ width: '100%' }}>\n            <View style={styles.container}>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        data-name='title'\n                        placeholder={\"Title\"}\n                        style={styles.textInput}\n                        value={formValues.title}\n                        onChangeText={e => updateFormValue(e, 'title')}\n                    />\n\n                </View>\n                <Text style={styles.textLabel}>When?</Text>\n                <View style={styles.mainContainer}>\n                    {/* <Text>selected: {date.toLocaleString()}</Text> */}\n\n                    <DateTimePicker\n                        testID=\"dateTimePicker\"\n                        value={formValues.date}\n                        mode={'datetime'}\n                        is24Hour={true}\n                        onChange={onChange}\n                    />\n                </View>\n\n                <View style={styles.mainContainer}>\n                    <TextInput\n                        data-name='location'\n                        placeholder={\"Where?\"}\n                        style={styles.textInput}\n                        value={formValues.location}\n                        onChangeText={e => updateFormValue(e, 'location')}\n                    />\n\n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        data-name='content'\n                        placeholder={\"What?\"}\n                        style={styles.textInput}\n                        multiline\n                        value={formValues.content}\n                        onChangeText={e => updateFormValue(e, 'content')}\n                    />\n\n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        placeholder={\"Who?\"}\n                        style={styles.textInput}\n                        value={nextSelectedInvite}\n                        onChangeText={setNextSelectedInvite}\n                    />\n\n                </View>\n\n                <View style={styles.searchContainer}>\n\n                    <FlatList\n                        data={filterFriendList}\n                        renderItem={({ item }) => <SearchListNameCard item={item} ></SearchListNameCard>}\n                        keyExtractor={item => item.id}\n                    />\n                </View>\n                <Button onPress={setEvent}\n                    title=\"Post Event\"\n                    color=\"#841584\"\n                    accessibilityLabel=\"Post New Event\"></Button>\n                <Text style={styles.textLabel}>Invites:</Text>\n\n                <FlatList\n                    data={formValues.invites}\n                    style={{ width: '100%' }}\n                    renderItem={({ item }) => <SelectedNameCard item={item} ></SelectedNameCard>}\n                    keyExtractor={item => item.id}\n                    numColumns={2}\n                />\n\n            </View>\n\n\n\n\n\n\n\n\n\n        </KeyboardAvoidingView>\n    )\n\n}\n\nexport default EventInput;"]},"metadata":{},"sourceType":"module"}