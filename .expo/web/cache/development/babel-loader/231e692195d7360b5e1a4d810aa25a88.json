{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./style\";\nimport { useNavigation } from '@react-navigation/native';\nimport { API, graphqlOperation, Auth } from \"aws-amplify\";\nimport { createChatRoom, createChatRoomUser } from \"../../src/graphql/mutations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var user = props.user;\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    var newChatRoomData, newChatRoom, userInfo;\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoom, {\n              input: {\n                lastMessageID: \"zz753fca-e8c3-473b-8e85-b14196e84e16\"\n              }\n            })));\n\n          case 3:\n            newChatRoomData = _context.sent;\n\n            if (newChatRoomData.data) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(\" Failed to create a chat room\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            newChatRoom = newChatRoomData.data.createChatRoom;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: user.id,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 12:\n            userInfo = _context.sent;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: userInfo.attributes.sub,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 15:\n            navigation.navigate('ChatRoom', {\n              id: newChatRoom.id,\n              name: \"Hardcoded name\"\n            });\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: onClick,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.lefContainer,\n        children: [_jsx(Image, {\n          source: {\n            uri: user.imageUri\n          },\n          style: styles.avatar\n        }), _jsxs(View, {\n          style: styles.midContainer,\n          children: [_jsx(Text, {\n            style: styles.username,\n            children: user.name\n          }), _jsx(Text, {\n            numberOfLines: 2,\n            style: styles.status,\n            children: user.status\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default ContactListItem;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/ContactListItem/index.tsx"],"names":["React","styles","useNavigation","API","graphqlOperation","Auth","createChatRoom","createChatRoomUser","ContactListItem","props","user","navigation","onClick","graphql","input","lastMessageID","newChatRoomData","data","console","log","newChatRoom","userID","id","chatRoomID","currentAuthenticatedUser","userInfo","attributes","sub","navigate","name","container","lefContainer","uri","imageUri","avatar","midContainer","username","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SACEC,GADF,EAEEC,gBAFF,EAGEC,IAHF,QAIO,aAJP;AAKA,SACEC,cADF,EAEEC,kBAFF;;;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAiC;AACvD,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;AAEA,MAAMC,UAAU,GAAGT,aAAa,EAAhC;;AAEA,MAAMU,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAIkBT,GAAG,CAACU,OAAJ,CAC5BT,gBAAgB,CACdE,cADc,EACE;AACdQ,cAAAA,KAAK,EAAE;AACLC,gBAAAA,aAAa,EAAE;AADV;AADO,aADF,CADY,CAJlB;;AAAA;AAINC,YAAAA,eAJM;;AAAA,gBAcPA,eAAe,CAACC,IAdT;AAAA;AAAA;AAAA;;AAeVC,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAfU;;AAAA;AAmBNC,YAAAA,WAnBM,GAmBQJ,eAAe,CAACC,IAAhB,CAAqBX,cAnB7B;AAAA;AAAA,6CAsBNH,GAAG,CAACU,OAAJ,CACJT,gBAAgB,CACdG,kBADc,EACM;AAClBO,cAAAA,KAAK,EAAE;AACLO,gBAAAA,MAAM,EAAEX,IAAI,CAACY,EADR;AAELC,gBAAAA,UAAU,EAAEH,WAAW,CAACE;AAFnB;AADW,aADN,CADZ,CAtBM;;AAAA;AAAA;AAAA,6CAkCWjB,IAAI,CAACmB,wBAAL,EAlCX;;AAAA;AAkCNC,YAAAA,QAlCM;AAAA;AAAA,6CAmCNtB,GAAG,CAACU,OAAJ,CACJT,gBAAgB,CACdG,kBADc,EACM;AAClBO,cAAAA,KAAK,EAAE;AACLO,gBAAAA,MAAM,EAAEI,QAAQ,CAACC,UAAT,CAAoBC,GADvB;AAELJ,gBAAAA,UAAU,EAAEH,WAAW,CAACE;AAFnB;AADW,aADN,CADZ,CAnCM;;AAAA;AA8CZX,YAAAA,UAAU,CAACiB,QAAX,CAAoB,UAApB,EAAgC;AAC9BN,cAAAA,EAAE,EAAEF,WAAW,CAACE,EADc;AAE9BO,cAAAA,IAAI,EAAE;AAFwB,aAAhC;AA9CY;AAAA;;AAAA;AAAA;AAAA;AAoDZX,YAAAA,OAAO,CAACC,GAAR;;AApDY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAwDA,SACE,KAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEP,OAAnC;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,MAAM,CAAC6B,SAApB;AAAA,gBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE7B,MAAM,CAAC8B,YAApB;AAAA,mBACE,KAAC,KAAD;AAAO,UAAA,MAAM,EAAE;AAAEC,YAAAA,GAAG,EAAEtB,IAAI,CAACuB;AAAZ,WAAf;AAAuC,UAAA,KAAK,EAAEhC,MAAM,CAACiC;AAArD,UADF,EAGE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEjC,MAAM,CAACkC,YAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAElC,MAAM,CAACmC,QAApB;AAAA,sBAA+B1B,IAAI,CAACmB;AAApC,YADF,EAEE,KAAC,IAAD;AAAM,YAAA,aAAa,EAAE,CAArB;AAAwB,YAAA,KAAK,EAAE5B,MAAM,CAACoC,MAAtC;AAAA,sBAA+C3B,IAAI,CAAC2B;AAApD,YAFF;AAAA,UAHF;AAAA;AADF;AADF,IADF;AAcD,CA3ED;;AA6EA,eAAe7B,eAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  TouchableWithoutFeedback\n} from \"react-native\";\nimport { User } from \"../../types\";\nimport styles from \"./style\";\nimport { useNavigation } from '@react-navigation/native';\n\nimport {\n  API,\n  graphqlOperation,\n  Auth,\n} from \"aws-amplify\";\nimport {\n  createChatRoom,\n  createChatRoomUser\n} from '../../src/graphql/mutations';\n\nexport type ContactListItemProps = {\n  user: User;\n}\n\nconst ContactListItem = (props: ContactListItemProps) => {\n  const { user } = props;\n\n  const navigation = useNavigation();\n\n  const onClick = async () => {\n    try {\n\n      //  1. Create a new Chat Room\n      const newChatRoomData = await API.graphql(\n        graphqlOperation(\n          createChatRoom, {\n            input: {\n              lastMessageID: \"zz753fca-e8c3-473b-8e85-b14196e84e16\"\n            }\n          }\n        )\n      )\n\n      if (!newChatRoomData.data) {\n        console.log(\" Failed to create a chat room\");\n        return;\n      }\n\n      const newChatRoom = newChatRoomData.data.createChatRoom;\n\n      // 2. Add `user` to the Chat Room\n      await API.graphql(\n        graphqlOperation(\n          createChatRoomUser, {\n            input: {\n              userID: user.id,\n              chatRoomID: newChatRoom.id,\n            }\n          }\n        )\n      )\n\n      //  3. Add authenticated user to the Chat Room\n      const userInfo = await Auth.currentAuthenticatedUser();\n      await API.graphql(\n        graphqlOperation(\n          createChatRoomUser, {\n            input: {\n              userID: userInfo.attributes.sub,\n              chatRoomID: newChatRoom.id,\n            }\n          }\n        )\n      )\n\n      navigation.navigate('ChatRoom', {\n        id: newChatRoom.id,\n        name: \"Hardcoded name\",\n      })\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={onClick}>\n      <View style={styles.container}>\n        <View style={styles.lefContainer}>\n          <Image source={{ uri: user.imageUri }} style={styles.avatar}/>\n\n          <View style={styles.midContainer}>\n            <Text style={styles.username}>{user.name}</Text>\n            <Text numberOfLines={2} style={styles.status}>{user.status}</Text>\n          </View>\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  )\n};\n\nexport default ContactListItem;"]},"metadata":{},"sourceType":"module"}