{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styles from \"./styles\";\nimport { API, Auth, graphqlOperation } from \"aws-amplify\";\nimport { createEvents } from \"../../src/graphql/mutations\";\nimport { listUsers } from \"../../src/graphql/queries\";\nimport DatePicker from 'react-native-date-picker';\nimport { FontAwesome, EvilIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EventInput = function EventInput() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myUserId = _useState4[0],\n      setMyUserId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nextSelectedInvite = _useState6[0],\n      setNextSelectedInvite = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inviteList = _useState8[0],\n      setInviteList = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filterFriendList = _useState10[0],\n      setFilterFriendList = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      users = _useState12[0],\n      setUsers = _useState12[1];\n\n  var _useState13 = useState(new Date()),\n      _useState14 = _slicedToArray(_useState13, 2),\n      date = _useState14[0],\n      setDate = _useState14[1];\n\n  useEffect(function () {\n    var fetchUsers = function fetchUsers() {\n      var userData;\n      return _regeneratorRuntime.async(function fetchUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listUsers)));\n\n            case 3:\n              userData = _context.sent;\n              console.log(userData);\n              setUsers(userData.data.listUsers.items);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    fetchUsers();\n  }, []);\n  useEffect(function () {\n    setFilterFriendList([]);\n\n    if (nextSelectedInvite == \"\") {\n      return;\n    }\n\n    var list = [];\n    users.forEach(function (element) {\n      if (element.name.toLowerCase().includes(nextSelectedInvite.toLowerCase())) list.push(element);\n    });\n    setFilterFriendList(list);\n    console.log(filterFriendList);\n  }, [nextSelectedInvite]);\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo;\n      return _regeneratorRuntime.async(function fetchUser$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userInfo = _context2.sent;\n              setMyUserId(userInfo.attributes.sub);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUser();\n  }, []);\n\n  var onSendPress = function onSendPress() {\n    var newEventData;\n    return _regeneratorRuntime.async(function onSendPress$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createEvents, {\n              input: {\n                content: description,\n                userID: myUserId,\n                chatRoomID: chatRoomID\n              }\n            })));\n\n          case 3:\n            newEventData = _context3.sent;\n            console.log(newEventData);\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var onClick = function onClick(name) {\n    return function () {\n      setInviteList(function (inviteList) {\n        return [].concat(_toConsumableArray(inviteList), [name]);\n      });\n      setNextSelectedInvite(\"\");\n    };\n  };\n\n  var removeName = function removeName(name) {\n    return function () {\n      setInviteList(inviteList.filter(function (item) {\n        return item !== name;\n      }));\n    };\n  };\n\n  var SearchListNameCard = function SearchListNameCard(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableWithoutFeedback, {\n      children: _jsxs(View, {\n        style: styles.nameCardContainer,\n        children: [_jsx(EvilIcons, {\n          name: \"search\",\n          size: 24,\n          color: \"black\"\n        }), _jsx(Image, {\n          source: {\n            uri: item.imageUri\n          },\n          style: styles.avatar\n        }), _jsx(Text, {\n          onPress: onClick(item),\n          style: styles.nameCardText,\n          children: item.name\n        })]\n      })\n    });\n  };\n\n  var SelectedNameCard = function SelectedNameCard(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableWithoutFeedback, {\n      children: _jsx(View, {\n        style: styles.selectedUsers,\n        children: _jsxs(View, {\n          style: styles.lefContainer,\n          children: [_jsx(Image, {\n            source: {\n              uri: item.imageUri\n            },\n            style: styles.avatar\n          }), _jsx(View, {\n            style: styles.midContainer,\n            children: _jsx(Text, {\n              style: styles.username,\n              children: item.name\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: removeName(item),\n            children: _jsx(FontAwesome, {\n              name: \"remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    keyboardVerticalOffset: 100,\n    style: {\n      width: '100%'\n    },\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"Title\",\n          style: styles.textInput,\n          value: nextSelectedInvite,\n          onChangeText: setNextSelectedInvite\n        })\n      }), _jsxs(View, {\n        style: styles.mainContainer,\n        children: [_jsx(TextInput, {\n          placeholder: \"When?\",\n          style: styles.textInput,\n          value: nextSelectedInvite,\n          onChangeText: setNextSelectedInvite\n        }), _jsx(DatePicker, {\n          date: date,\n          onDateChange: setDate\n        })]\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"Where?\",\n          style: styles.textInput,\n          value: nextSelectedInvite,\n          onChangeText: setNextSelectedInvite\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"What?\",\n          style: styles.textInput,\n          multiline: true,\n          value: nextSelectedInvite,\n          onChangeText: setNextSelectedInvite\n        })\n      }), _jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(TextInput, {\n          placeholder: \"Who?\",\n          style: styles.textInput,\n          multiline: true,\n          value: nextSelectedInvite,\n          onChangeText: setNextSelectedInvite\n        })\n      }), _jsx(View, {\n        style: styles.searchContainer,\n        children: _jsx(FlatList, {\n          data: filterFriendList,\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsx(SearchListNameCard, {\n              item: item\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })\n      })]\n    }), _jsx(Text, {\n      style: styles.nameCardText,\n      children: \"Invites:\"\n    }), _jsx(View, {\n      style: styles.selectedUsersContainer,\n      children: _jsx(FlatList, {\n        data: inviteList,\n        style: {\n          width: '100%'\n        },\n        renderItem: function renderItem(_ref4) {\n          var item = _ref4.item;\n          return _jsx(SelectedNameCard, {\n            item: item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        numColumns: 2\n      })\n    })]\n  });\n};\n\nexport default EventInput;","map":{"version":3,"sources":["/Users/antonyarreola/Documents/GitHub/whatsapp-clone/components/EventInput/index.tsx"],"names":["React","useState","useEffect","styles","API","Auth","graphqlOperation","createEvents","listUsers","DatePicker","FontAwesome","EvilIcons","EventInput","description","setDescription","myUserId","setMyUserId","nextSelectedInvite","setNextSelectedInvite","inviteList","setInviteList","filterFriendList","setFilterFriendList","users","setUsers","Date","date","setDate","fetchUsers","graphql","userData","console","log","data","items","list","forEach","element","name","toLowerCase","includes","push","fetchUser","currentAuthenticatedUser","userInfo","attributes","sub","onSendPress","input","content","userID","chatRoomID","newEventData","onClick","removeName","filter","item","SearchListNameCard","nameCardContainer","uri","imageUri","avatar","nameCardText","SelectedNameCard","selectedUsers","lefContainer","midContainer","username","Platform","OS","width","container","mainContainer","textInput","searchContainer","id","selectedUsersContainer"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,Fragment} from 'react';\nimport {View,FlatList,Image, Text, TextInput, TouchableWithoutFeedback,TouchableOpacity,KeyboardAvoidingView,Platform,StyleSheet} from \"react-native\";\nimport styles from './styles';\nimport{API,Auth,graphqlOperation,} from \"aws-amplify\";\nimport {createEvents,updateChatRoom} from \"../../src/graphql/mutations\";\nimport {listUsers} from '../../src/graphql/queries';\nimport DatePicker from 'react-native-date-picker';\nimport {\n  MaterialCommunityIcons,\n  MaterialIcons,\n  FontAwesome,\n  Entypo,\n  Fontisto,\n  EvilIcons ,\n} from '@expo/vector-icons';\n\nconst EventInput = () => {\n\n  //const {chatRoomID} = props;\n  const [description, setDescription] = useState('');\n  const [myUserId, setMyUserId] = useState('');\n  const [nextSelectedInvite,setNextSelectedInvite] = useState('');\n  const [inviteList,setInviteList] = useState([]);\n  const [filterFriendList, setFilterFriendList] = useState([]);\n  const [users,setUsers] = useState([]);\n  const [date, setDate] = useState(new Date())\n  \n  useEffect(() => {\n      const fetchUsers = async () => {\n          try{\n              const userData = await API.graphql(graphqlOperation(listUsers));\n              console.log(userData);\n              setUsers(userData.data.listUsers.items);\n          }catch(e){\n              console.log(e);\n          }\n      }\n     fetchUsers();\n  }, [])\n  useEffect(() =>{\n    setFilterFriendList([]);\n    if(nextSelectedInvite == \"\"){ return;}\n       \n        let list = [];\n        users.forEach((element) => {\n            if(element.name.toLowerCase().includes(nextSelectedInvite.toLowerCase()))\n               list.push(element);\n          });\n       setFilterFriendList(list);\n       \n       console.log(filterFriendList)\n    \n  },[nextSelectedInvite])\n    useEffect(() => {\n      const fetchUser = async () => {\n        const userInfo = await Auth.currentAuthenticatedUser();\n\n        setMyUserId(userInfo.attributes.sub);\n      }\n      fetchUser();\n    },[])\n  \n  const onSendPress = async () => {\n  \n    // send the message to the backend\n    try{\n     const newEventData =  await API.graphql(graphqlOperation(createEvents,{input:{content:description,userID:myUserId,chatRoomID}}))\n     console.log(newEventData);\n     \n    }catch(e){\n      console.log(e);\n    }\n\n   \n  }\n  \n  const onClick = (name) =>() =>{\n    setInviteList(inviteList => [...inviteList,name])\n    setNextSelectedInvite(\"\");\n  }\n \n const removeName = (name) => () =>{\n    setInviteList(inviteList.filter(item => item !== name) )\n }\n  const SearchListNameCard = ({ item }) => (\n    <TouchableWithoutFeedback >\n    <View  style={styles.nameCardContainer}>\n      <EvilIcons name=\"search\" size={24} color=\"black\" />\n      <Image source={{ uri: item.imageUri }} style={styles.avatar}/>\n      <Text onPress={onClick(item)} style={styles.nameCardText} >{item.name}</Text>\n    </View>\n    </TouchableWithoutFeedback>\n  );\n  const SelectedNameCard = ({ item }) => (\n    <TouchableWithoutFeedback >\n      <View style={styles.selectedUsers}>\n        <View style={styles.lefContainer}>\n          <Image source={{ uri: item.imageUri }} style={styles.avatar}/>\n          <View style={styles.midContainer}>\n            <Text style={styles.username}>{item.name}</Text>\n          </View>\n          <TouchableOpacity  onPress ={removeName(item)}>\n          <FontAwesome name=\"remove\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n        \n      </View>\n    </TouchableWithoutFeedback>\n  );\n    return (\n        <KeyboardAvoidingView behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n            keyboardVerticalOffset={100} style={{ width: '100%' }}>\n            <View style={styles.container}>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        placeholder={\"Title\"}\n                        style={styles.textInput}\n                        value={nextSelectedInvite}\n                        onChangeText={setNextSelectedInvite}\n                    />\n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        placeholder={\"When?\"}\n                        style={styles.textInput}\n                        value={nextSelectedInvite}\n                        onChangeText={setNextSelectedInvite}\n                    />\n                   <DatePicker date={date} onDateChange={setDate} />\n                   \n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        placeholder={\"Where?\"}\n                        style={styles.textInput}\n                        value={nextSelectedInvite}\n                        onChangeText={setNextSelectedInvite}\n                    />\n\n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        placeholder={\"What?\"}\n                        style={styles.textInput}\n                        multiline\n                        value={nextSelectedInvite}\n                        onChangeText={setNextSelectedInvite}\n                    />\n                    \n                </View>\n                <View style={styles.mainContainer}>\n\n                    <TextInput\n                        placeholder={\"Who?\"}\n                        style={styles.textInput}\n                        multiline\n                        value={nextSelectedInvite}\n                        onChangeText={setNextSelectedInvite}\n                    />\n\n                </View>\n             \n                <View style={styles.searchContainer}>\n                   \n                    <FlatList\n                        data={filterFriendList}\n                        renderItem={({ item }) => <SearchListNameCard item={item} ></SearchListNameCard>}\n                        keyExtractor={item => item.id}\n                    />\n                </View>\n\n\n            </View>\n            <Text style={styles.nameCardText}>Invites:</Text>\n           <View style={styles.selectedUsersContainer}>\n                <FlatList\n                    data={inviteList}\n                    style={{width: '100%'}}\n                    renderItem={({ item }) => <SelectedNameCard item={item} ></SelectedNameCard>}\n                    keyExtractor={item => item.id}\n                    numColumns={2}\n                />\n           </View>\n               \n\n          \n\n\n\n\n\n        </KeyboardAvoidingView>\n    )\n\n}\n\nexport default EventInput;"]},"metadata":{},"sourceType":"module"}